# Problem set - The Long-Term Effects of Communism in Eastern Europe

Author: Benjamin Markert
 
***

#< ignore
```{r "0_1"}

library(RTutor)
library(yaml)
# Adapt working directory
setwd("~/Documents/Studium WiWi BSc/Bachelorarbeit/GitHub Package/RTutorLongTermEffectsCommunism/RTutorLongTermEffectsCommunism/inst/ps/LongTermEffectsCommunism")
ps.name = "LongTermEffectsCommunism"; sol.file = paste0(ps.name,"_sol.Rmd")

# character vector of all packages you load in the problem set
libs = c("ggplot2", "dplyr", "patchwork", "tidyr", "stargazer", "TAM", "lfe", "kableExtra", "lmtest") 

create.ps(sol.file=sol.file, ps.name=ps.name,libs=libs, rps.has.sol=TRUE, addons="quiz")

# Show the problem set in the webbrowser
show.ps(ps.name, launch.browser=TRUE, auto.save.code=FALSE, sample.solution=FALSE)
stop.without.error()

  ps.name = "LongTermEffectsCommunism" # problem set name
  libs = c("ggplot2", "dplyr", "patchwork", "tidyr", "stargazer", "TAM", "lfe", "kableExtra", "lmtest")  # list of all libraries used by ps
  # Folder that contains your .rps file
  rps.dir = "~/Documents/Studium WiWi BSc/Bachelorarbeit/GitHub Package/RTutorLongTermEffectsCommunism/RTutorLongTermEffectsCommunism/inst/ps/LongTermEffectsCommunism"
  # Folder in which app shall be created
  app.dir = "~/Documents/Studium WiWi BSc/Bachelorarbeit/GitHub Package/RTutorLongTermEffectsCommunism/PackageApp"
  rtutor.app.skel(ps.name=ps.name, app.name="RTutorLongTermEffectsCommunism",
                  app.dir=app.dir, rps.dir = rps.dir,
                  rps.app = TRUE, libs=libs,overwrite=TRUE)
```
#>


Welcome to this problem set, which is part of my bachelor's thesis at Ulm University. The topic of this interactive analysis is to investigate the long-term effects of communism in Eastern Europe on policies and preferences. The analysis is based on the paper **"The Long-Term Effects of Communism in Eastern Europe"** from Nicola Fuchs-Schündeln and Matthias Schündeln. It was published in the Journal of Economic Perspectives in spring 2020. The problem set was created using the `RTutor` package by Sebastian Kranz.

The paper, the online appendix and the data are available at the following webpages:

- **Paper**: https://pubs.aeaweb.org/doi/pdfplus/10.1257/jep.34.2.172

- **Appendix**: https://www.aeaweb.org/content/file?id=12043

- **Data**: https://www.openicpsr.org/openicpsr/project/117970/version/V1/view


The problem set is published on the following:

- **GitHub**: https://github.com/BenjaminMarkert/RTutorLongTermEffectsCommunism

- **shinyapps.io**: https://benjaminmarkert.shinyapps.io/RTutorLongTermEffectsCommunism/

With the end of World War II in 1945, the political situation in Eastern Europe was mainly set by the presence and policies of the Soviet Union. This lead to the implementation and preservation of a communist political system in each of the Eastern European states. The systems were mainly determined by the Soviets with the objective of economic and social transformation aimed towards socialism (Rakowska-Harmstone & Gyrogy, 1979). Thus most of the countries identified themselves as socialist countries (e.g. "The Socialist Republic of Romania") and followed the Marxist-Leninist doctrine (Sandle, 2007). Nevertheless, in literature many authors argue that the Eastern European states did not truly follow the ideas of Marx, Engels and Lenin. Instead they followed their own interests and tried to gain political power, rather as a state socialist or totalitarian socialist system (Bahro, 1978; Ferge, 1997; Šiklová, 1993). According to Karl Marx and Friedrich Engels (1848), the history of all society is the history of struggles between classes. Specifically the class struggle between the bourgeois, the modern capitalists, and the proletarians, the modern wage labors. The goal is the abolition of private bourgeois property, which is based on exploitation of proletarian labor, and the ruling of the working class (Marx & Engels, 1848). This is a part of the explanation of communism according to Marx & Engels (1848) from the 'Communist Manifesto'.   
However, since the focus in this problem set is not in analyzing the Eastern European states regarding their political systems, we use "communism" as a comprehensive approach to refer to the Eastern European states in the following. Furthermore, we use the term "capitalism" to describe the democratic market economies of the West (Fuchs-Schündeln & Schündeln, 2020).

The so called Iron Curtain, which was the border between the capitalist Central/Western Europe and the communist Eastern Europe, fell in 1989 and thus Eastern Europe was in a transition stage towards a capitalist economy (Fuchs-Schündeln & Schündeln, 2020; Welsh, 1996). The countries have undergone a transformation from a centrally planned economy to market economies. Hence we use the year 1990 in our analysis as the first year of a capitalist regime in Eastern Europe. We can attach the effects of communism with the initial levels and the long-term effects with comparing those with the most current years of which we have data (Fuchs-Schündeln & Schündeln, 2020). Already 15 years after the end of communism, eight countries from the East have become a member of the European Union and three more countries in the following years.  

Our analysis is based on four areas in which a capitalist and communist system fundamentally differ. The first exercise gives an overview over the data we will use throughout the analysis. Each exercise starts with an explanation of the topic, continues with a descriptive analysis on macro indicators and ends with the analysis of preferences. Exercise 2 covers the first area regarding government intervention into markets. This exercise is very important, since the used econometric methods are explained more in detail than in the other tasks. Furthermore we build our own linear model, which is similar to a difference-in-difference (DiD) estimation. Exercise 3 is about political freedom, exercise 4 about income distribution and exercise 5 about gender inequality. The problem set ends with a summary of the regression analysis and a conclusion in which the findings get briefly discussed.

## Exercise Content

1. Overview of Data
  
2. Government Intervention into Markets

  2.1 Economic Freedom 
  
  2.2 Preferences for a Market Economy
  
  2.3 Estimating DiD with Linear Regression
  
  2.4 Regression Analysis
  
3. Political Freedom

  3.1 Democratization
  
  3.2 Preferences for Democracy
  
4. Income Distribution
  
  4.1 Measures of the Welfare State
  
  4.2 Preferences for Redistribution
  
5. Gender Inequality

  5.1 Gender Equality in Labor Market
  
  5.2 Preferences for Gender Equality in the Labor Market

6. Summary of Regression Analysis

7. Conclusion

8. References

<br>
**How to solve this problem set**

The problem set consists of normal text blocks, code chunks, info blocks and quizzes. You can solve each exercise independent from each other, nevertheless I highly recommend to solve the exercise in the chronological order. Especially *Exercise 1* and *Exercise 2* are important for the understanding of the other tasks, since it gives an overview over the data we use and some theoretical background over the econometric methods. 

An exercise consists of several tasks and each task contains one code block. You need to solve each task to continue with the next task. If you start with a new exercise, you need to press the `edit` button at the first code chunk. Sometimes the code is already given, sometimes only parts of it are given and you need to fill in the missing pieces and sometimes nothing is given at all. When there is already code in the chunk, but some arguments are missing, indicated by the `___`, you need to fill in the correct arguments. If you press the `check` button you can see if your code is correct. If your answer is not correct, or you need help in general, you can press the `hint` button to get some help. The button `run chunk` runs the chunk without checking if it is correct. With the button `data` you get to the data viewer where you can have a look over the data currently loaded. If you do not get to the answer at all, you can press the `solution` button to get a sample solution.

The info blocks contain information about R packages, commands or some theoretical background. There are no tasks inside those blocks. Sometimes there are chunks inside to give an example of code, but you do not need to fill out anything.

You can earn several awards in this problem set through solving the tasks and the quizzes, which you will encounter in most of the tasks. The quizzes are optional which means you do not have to solve them to continue with the next task.

With that being said, I hope you enjoy your economic journey through this problem set and learn a lot about "The Long-Term Effects of Communism in Eastern Europe".

## Exercise 1 -- Overview of Data 

We are interested in the long-term effects of communism. Therefore we need to analyze several indicators over an interval. We need a base level of these indicators at the end of the communist system and then show the development of these to understand the effects.  
Before going in to deeper analysis of the data, we must have a look at the data to understand what it contains.

a) In the first part of this exercise, we want to get a brief overview over the data we will use for the analysis of several macro indicators.

**Task 1.1**

First we need to load the data and assign it to a variable.  
Therefore we use the function `readRDS()` and assign it to the variable `datamacro`. After that we want to have a look at the first rows of the data set with using the command `head()`.  
The code is already there, just press **check** and have a look at the first rows and the variables in the columns.

#< info "readRDS()"

The command `readRDS()` reads a RDS file and saves it in the assigned variable. A RDS file is one of the two native R data formats. You can save a single R object in a RDS file with the command `saveRDS()`. The other data format of R is RData (shortened RDA), which can store multiple R objects.  
Depending if the file is in your working directory, you have to set the path of the file to import it.  
If the file is in our working directory, it is enough to use the name of the file as an argument.

```{r "1_a_1_1", optional = TRUE, eval = FALSE}
data <- readRDS("dataset.rds")
```

We need to give the whole path of the file as an argument if the file is not in the working directory.

```{r "1_a_1_2", optional = TRUE, eval = FALSE}
data <- readRDS("user/documents/data/dataset.rds")
```

See https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/readRDS for more information about `readRDS()` and `saveRDS()` or call `help(readRDS)`.

#>

```{r "1_a_1"}
#< task
datamacro <- readRDS("JEP_Data_MacroFacts.rds")

head(datamacro)
#>
```

The function `head()` shows the first six rows of a data set. As you can see in the first columns, every row represents observations of variables for one year and country. The data displayed shows information from 1990 to 1995 for Albania. Our data ranges from the years 1990 - 2019, which means every country has 30 rows and is thus in the long format. We have observations for 31 countries from West, Central and Eastern Europe. Our data is therefore considered as panel data set, since it has observations for the time series of each country (Wooldridge, 2013). In general the data set has 899 rows. Data is not available for all years and countries for every variable, which means there are a lot of NA's (means the data is not available) in the data set. This has the result that we cannot use all countries for the analysis on every variable, because we build averages for country groups and the observations taken in consideration for each year would not be consistent.

#< info "JEP_Data_MacroFacts.rds"

The authors got the information from several sources. For example: Data for the indicator GDP per capita is from the World Bank, data for the Index of Economic Freedom is from The Heritage Foundation.  

In case you have more interest in how the authors collected all the information and put them together to one data set, you can download a folder on the website of the paper. There you will find a README file in which every source is described.

The data has already been pre-processed, so that unnecessary variables got deleted and some minor changes were made, for example generating a variable for the country group. The original data set as a stata file and the code for the pre-processing is available in the GitHub repository.

Source: Fuchs-Schündeln & Schündeln (2020) 

#>

**Task 1.2**

After getting a small overview over the data set we have a more precise look on the variables we are using.  
Type the command `colnames()` and in the parentheses the name of the data set.

```{r "1_a_2"}
colnames(datamacro)

#< hint
display("Ttype the command colnames() and inside the parentheses the name we assigned to the data.")
#>

```

The command `colnames()` shows the column names of our data set.  
These are the names of the variables we are going to use throughout the problem set, most of them are self-explaining. A few of them get explained directly. The remaining will be explained more in detail when we are going to use them. The data frame stores data for 17 variables. We already got familiar with the two first variables `Year` and `Country`. The variable `GDPpCPPP` shows the **GDP per Capita**, converted to international dollars using purchasing power parity rates. `Overall_eco_fre` and `Ease_doing_Bus` represent the **Economic Freedom Index** and the **Ease of Doing Business score**, these give a sight on the market orientation of a country. The variables `Public_empl_rate_ILO` and `Publiccoprt_empl_rate_ILO` show rates of total employment in the public sector and in public companies. You can get these rates from the International Labour Organization. There are more variables which are important to represent several indicators, those will be explained later in detail.  
The last two variables are `Country_group` and `Country_group2`, both show if a country is categorized as East or West, with the difference that `Country_group` distinguishes between EU-East, Non-EU East and West and `Country_group2` is differing only between East and West, but more of the country groups in the next exercise!

**Task 1.3**

In the next step we want to have a look at our defined country groups and which countries they contain.   
Therefore we modify our data using the `dplyr` package. 

#< info "The dplyr package"

The dplyr package is useful for data manipulation and transformation. It provides a lot of simple functions which can transform data in a compact and elegant way and thus makes the data more accessible to evaluate. I will briefly explain a few functions of which we are going to use some in this task.

- `select()`: selects variables of a data frame based on the names

- `distinct()`: picks only unique rows of the data set

- `mutate()`: adds new variables

- `filter()`: filters the data frame based on conditions

- `group_by()`: allows to perform any operation based on groups

- `summarize()`: reduces the amount of variables in a date frame to a summary of one ore more vectors, often used together with `group_by()`

- `slice_sample()`: randomly selects a number of rows to display  

Get more information here: https://dplyr.tidyverse.org

#>  

We need to load the necessary packages `dplyr`, `tidyr` and `kableExtra` with the `library()` command first. Next we assign our data to a new variable, which we call `countries`. The next step is to take use of the pipe operator `%>%`, this function creates a chain of commands, which are executed one after another. Since we are only interested in the country names and the assigned group, we select the variables `Country` and `Country_group` and use the command `distinct()` to receive unique rows. Furthermore we need to transfer the data to the wide format. We will do this with the `pivot_wider()` function from the `tidyr` package. 

#< info "pivot_wider() and pivot_longer()"

The functions `pivot_wider()` and `pivot_longer()` are both part of the `tidyr` package and useful for data transformation. There are two formats in which data can occur: **wide** and **long**. If data is in the **wide** format, the values of the variables in each row are unique, which results in more columns than in the **long** format. Data in **long** format contains several rows for each value of a variable and thus more rows than data in the **wide** format. If you remember the structure of `datamacro`, each country has 30 rows, which means the data is in the **long** format.

- `pivot_wider()`: widens a data set by decreasing the number of rows and adding columns

- `pivot_longer()`: lengthens a data set by adding more rows and decreasing the number of columns

See https://tidyr.tidyverse.org/reference/pivot_wider.html for more information on `pivot_wider()` and https://tidyr.tidyverse.org/reference/pivot_longer.html for more information on `pivot_longer()`.

#>

After preparing the data, we want to have a look at the definition of the country groups. We will use the `kableExtra` package. Type the command `kable()` and the data we want to show under the code for the preparation. Press **check** afterwards. 

```{r "1_a_3", results = 'asis'}
#< task
library(dplyr)
library(tidyr)
library(kableExtra)

countries <- datamacro %>%
  subset(., Year != 2019) %>%
  select(Country, Country_group) %>%
  distinct() %>%
  pivot_wider(., Country_group, names_from = Country_group, values_from = Country, names_sort = TRUE) %>%
  na.omit() 
#>

kable(countries)

#< hint
display("Seems like something is not correct yet. Type the command kable() and inside the parentheses the name we assigned to the modified data.")
#>

```  
 
<br> 
We have three different country groups. Two groups regarding Central and Eastern European countries, which belonged to Yugoslavia and the Baltic countries, and one group representing Western countries. However, except the three Baltic countries Estonia, Latvia and Lithuania, former countries from the Soviet Republic are excluded. We have split up the central and eastern European countries in the groups **EU East** and **Non-EU East**. The **EU East** are countries that are today members of the European Union and the **Non-EU East** represents countries, that have not joined the European Union yet. Countries assigned in the group **West** are countries belonging to the European Union (former "EU-15" Countries), with the United Kingdom since we use data until 2019 and they resigned from the EU in 2020 and without Germany considering its separation into East and West.  

b) In the next part of the exercise we want to have a look over the preferences data. 

**Task 1.4** 

Load the data `JEP_Preferences_Data.rds` using the `readRDS()` function and assign it to the variable `datapref`.  
Afterwards take a look at 10 random rows of the data using the command `slice_sample()`. The syntax of `slice_sample()` is quite simple, you have to call the data you want to get samples from and how many rows. You do this with specifying the data as the first argument and `n = ...` in the function as the second argument to specify the amount of rows. 

```{r "1_b_4"}
datapref <- readRDS("JEP_Preferences_Data.rds")

slice_sample(datapref,n = 10)
```

#< info "JEP_Preferences_Data.rds"

The data set is based on the original stata file `JEP_Preferences_Data.dta`.  
Fuchs-Schündeln and Schündeln (2020) got the information for the data set based on the Life in Transition Survey (LITS) I, II and III from the European Bank for Reconstruction and Development. Specifically, there have been questions in the survey about attitudes towards a market economy and towards democracy.  
They also used data from the International Social Survey Programme (ISSP), to be precise, they evaluated two ISSP modules regarding inequality and social policies and one ISSP survey regarding family and changing gender roles.  

The data has again been pre-processed, which means that unnecessary variables got deleted and some variables which are needed in later parts have been added. The original data set as a stata file and the code for the pre-processing are available in the GitHub repository. 

Source: Fuchs-Schündeln & Schündeln (2020)

#>

The structure of the data set differs from `datamacro` and is not as straightforward, given it is based on several surveys and not concrete indicators. One row represents one observation of one question regarding the survey the question is from. The variable `year` indicates the year of the survey. We will select the relevant surveys based on this variable later. Although the data consists of several surveys, which means there are timing differences in collecting the data, we can handle it as cross-sectional data (Wooldridge, 2013). The data set contains a lot of dummy variables, which means that the variable contains only two values, one and zero. For example, the variable `male` is a dummy variable. It is one if the respondent is male and if it is zero, the respondent is not male.
The first two variables in the data frame show again the year and country of the observation. The next variable is `Germanyeast`, it is a dummy variable which is one, if the respondent is from East Germany, obviously it requires Germany as a country. In fact we do not consider Germany throughout the analysis, but since we use it in one task, it is included in the data set. The next variables `male`, `age` and `birthyear` give more information about the respondent. These information are important because we want to analyze the preferences based on cohorts. The specific variables regarding the survey evaluation will be explained in detail when we need them. 

**Task 1.5** 

We got a good overview over the variables of the data, but what is the actual amount of rows and columns of the data?  
To answer that question we take use of the command `dim()`.  
Call the command `dim()` and the name of the data set into the parentheses.

```{r "1_b_5"}
dim(datapref)
```

The first number represents the number of rows and the second the number of columns in our data set. For comparison, `datamacro` has 930 rows and 17 columns. 

c) After getting a small summary of the data, we want to have a look on the economic situation, after the fall of the iron curtain, until today for our country groups. Therefore we are going to use the Gross Domestic Product per capita in constant international 2011 dollars, purchasing power parity adjusted, which is stored in the variable `GDPpCCC` in the `datamacro` data set. Purchasing power parity adjusted means it is transferred to international dollars using purchasing power parity rates. Thus the difference in price levels gets eliminated. The purchasing power parity (PPP) has been defined by Gustav Cassel (1918) during World War I, in order to determine the exchange rates between two or more countries.

#< info "Gross Domestic Product"

The GDP per capita gives a good overview over the economic situation in a country or region. It represents the value of all goods and services produced, but does not represent any environmental or social aspects. This means it is possible that a country has a high GDP, but the overall wellbeing of the society and ecosystem of the country is not as good as it seems. Furthermore the GDP promotes policies to increase industrial production, which promotes more consumption on the other side, even though it is not necessary at all.  
Besides all these negative aspects, the GDP is still one of the main measures when it comes to assessing a society and the theme of "GDP growth at any price" is still highly present in politics.  
However, it is an important indicator and provides a lot of information, therefore we use it.

Source: Fioramonti et al. (2019)

#> 

**Task 1.6**

We are going to create a plot which shows the development of the `GDPpCPPP` from 1990 to 2018. Therefore we use our `datamacro` data, but need to make some adjustments. We first assign the data frame to a new variable `dataGDP`, so we do not modify the original data. Then the countries Kosovo and Montenegro from the Non-EU East get removed, because data is not available constantly for every year for these countries. In the next step we group the data by `Year` and `Country_group`, because we want to calculate the average over the three country groups for every year. Lastly we call the command `distinct()` to have only unique rows. Then we load the package `ggplot2` and create the plot with the `ggplot()` function. 

#< info "The ggplot2 package"

The `ggplot2` package offers a wide range of functions to create beautiful plots. You start with the command `ggplot()` and either provide the data and aesthetic mapping directly or define it in the particular layer. You can add layers by connecting the commands with `+`, you can also add scales and other specification. Below is a brief overview over some important features we are going to use.

- `geom_line()`: creates a line plot

- `geom_point()`: creates a point plot, can be combined with `geom_line()`

- `scale_color_manual()`: to manually adapt the colors of the graph(s)

- `xlim()` and `ylim()`: specify the range of the x- and y-axis

- `xlab()` and `ylab()`: lets one manually adapt the names of the axes

- `ggtitle()`: title of the plot

An example of a basic line plot, with years on the x-axis and wage on the y-axis, could be the following:
```{r "1_c_6_1", optional = TRUE, eval = FALSE}
ggplot(data = data, aes(x = year, y = wage)) +
  geom_line()
```

See https://www.rdocumentation.org/packages/ggplot2 for more information about the `ggplot2` package.

#>

Since it is the first plot we create, the code is already given and you just need to press **check**.

```{r "1_c_6", fig.width=7,fig.height=7}
#< task
dataGDP <- datamacro %>%
  subset(., Country != "Kosovo" & Country != "Montenegro") %>%
  group_by(Year, Country_group) %>%
  summarize(Year,
            Country_group,
            GDPpC = mean(GDPpCPPP)) %>%
  distinct()

library(ggplot2)

ggplot() +
  geom_line(data = dataGDP, aes(x = Year, y = GDPpC, colour = Country_group), show.legend = FALSE) +
  geom_point(data = dataGDP, aes(x = Year, y = GDPpC, colour = Country_group), show.legend = FALSE) +
  scale_color_manual(name = "", 
                    labels = c("EU East", "Non-EU East", "West"),
                    values = c("red", "orange", "blue")) +
  geom_text(aes(x=2017,y=40000),label="West",colour="black",size=4) +
  geom_text(aes(x=2017,y=23000),label="EU East",colour="black",size=4) +
  geom_text(aes(x=2017,y=11000),label="Non-EU East",colour="black",size=4) +
  xlim(1990,2020) +
  scale_y_continuous(trans='log10') + 
  ylab("Constant international $") +
  ggtitle("GDP per Capita\n(logarithmic scale)") +
  theme_minimal()
#>
```

The plot shows the Year on the x-axis and the GDP per capita in constant international dollars on the y-axis, which is a logarithmic scale to represent the growth rates better. As we can see, the relative growth of the GDP is higher in the EU East and in the Non-EU East than in the West. However, the West is still on a clearly higher level than the EU East and especially as the Non-EU East. In 2018 the GDP per capita in the EU East was 61% and in the Non-EU East 30% of the GDP per capita in the West. If you have a look at the initial levels of the EU East and the Non-EU East, the GDP per capita was significantly higher in the EU East than in the Non-EU East. In 1995 the GDP per capita in the EU East was 39% and in the Non-EU East 16% of that in the West.

#< award "The Introduction Award"
Congratulations! You solved the first exercise, got an overview over the data and already learned something about the development of the GDP per capita.
#>

## Exercise 2 -- Government Intervention into Markets

The first of the four aspects in which a communist and capitalist system fundamentally differ, is that a communist economy has a strong intervention of the government into markets. This results in productive resources owned by the state. Decisions regarding production and distribution are made by state economic planning bodies (Anderson & Boettke, 1997). In theory, this requires the assumption that governmental authorities operate as selfless public servants with the motivation to single-mindedly maximize the social welfare. Anderson & Boettke (1997) outline that this selfless behavior is not consistent with the assumptions of human behavior in economics. This leads to one of the reasons why the communist system in the former communist countries did not work. 

In this exercise we are going to analyze the aspect of strong intervention of the government into markets. Therefore we use indicators regarding the economic freedom, specifically the **Economic Freedom Index**, **Ease of Doing Business score** and **Public Sector Employment**. Lastly we will analyze preferences for a market economy, based on cohorts. 

## Exercise 2.1 -- Economic Freedom

The focus in this exercise is on macro indicators regarding the economic freedom. For this purpose we will use the data set `datamacro`.

**Task 2.1.1**

First we need to import the data `JEP_Data_MacroFacts.rds` again and assign it to the variable `datamacro`. Since it is a new task you have to press **edit** first. If you do not know how to load a RDS file just look back to Exercise 1.

```{r "2_1_a_1"}
#< task_notest
# load the data set JEP_Data_MacroFacts.rds and assign it to the variable datamacro. The right command is readRDS("")
#>
datamacro <- readRDS("JEP_Data_MacroFacts.rds")
```

a) In this first part of the exercise we take a closer look on the **Economic Freedom Index** and the **Ease of Doing Business score**. Therefore we will create two plots using the `ggplot2` package.

**Task 2.1.2**

We start with an analysis of the **Economic Freedom Index**. The [Economic Freedom Index](https://www.heritage.org/index/about) is an index from The Heritage Foundation, which was first measured 1995, thus data is only available since 1995. Economic freedom gets defined as free choices on anything regarding work, production, consumption or investing. The index consists of twelve factors, which they score from 0 - 100. They group them into four subcategories, namely rule of law, government size, regulatory efficiency and open markets, higher scores indicate greater economic freedom. The variable `Overall_eco_fre` represents the score of the Economic Freedom Index. We use this measurement, because the economic structure in a communist system is based on a lack of free markets and central planning, which means among others low economic freedom.  

To get a feel for the index we let us display the minimum and maximum value of the variable. We do this with the commands `min()` and `max()`. The code for the minimum value is already given, you just have to enter the code for the maximum value. We refer to the correct variable of the data set by using the name of the data, a dollar sign `$` and the name of the variable we want to conduct the operation on. Do not forget to add `na.rm=TRUE` as second argument, otherwise the output will be NA.

```{r "2_1_a_2"}
#< task
min(datamacro$Overall_eco_fre,na.rm=TRUE)
#>
max(datamacro$Overall_eco_fre,na.rm=TRUE)
```

#< quiz "Minimum value of the Economic Freedom Index"

question: Which country in our data set has the lowest Economic Freedom Index of 29.4?
sc:
    - Bulgaria
    - Italy 
    - Montenegro
    - Bosnia and Herzegovina*
    - Sweden
    
success: The answer is correct! The lowest score of the Economic Freedom Index is from Bosnia and Herzegovina in the Years 1998 and 1999. For comparison, the lowest Economic Freedom Index as of today has North Korea with a score of 3.0.
failure: Try again.

#> 

<br>
#< quiz "Maximum value of the Economic Freedom Index"

question: Which country in our data set has the highest Economic Freedom Index of 82.6?
sc:
    - Denmark
    - Netherlands 
    - Ireland* 
    - Croatia
    - Finland
    
success: The answer is correct! The highest score of the Economic Freedom Index is from Ireland in the Year 2007. For comparison, the highest Economic Freedom Index as of today has Singapore with a score of 84.4.
failure: Try again.

#> 

<br>

#< award "Economic Freedom Index Quizmaster"
Well done! You solved your first Quiz.
#>

**Task 2.1.3**

In the next step we are going to modify the data using the `dplyr` package. Hence we do not want to modify the original data we assign it to a new variable called `dataEFI`. Since data for Kosovo from the Non-EU East is not available, we omit it. We group by `Year` and `Country_group` and then calculate the mean of `Overall_eco_fre` and save it in `eco_fre`. The code is almost given, you just have to fill in the missing names of the variables we want to group by.

```{r "2_1_a_3"}
#< fill_in
dataEFI <- datamacro %>%
  subset(., Country != "Kosovo") %>%
  group_by(___, ___) %>%
  summarize(Year,
            Country_group,
            eco_fre = mean(Overall_eco_fre)) %>%
  distinct()
#>
dataEFI <- datamacro %>%
  subset(., Country != "Kosovo") %>%
  group_by(Year, Country_group) %>%
  summarize(Year,
            Country_group,
            eco_fre = mean(Overall_eco_fre)) %>%
  distinct()
```


**Task 2.1.4**

We are familiar with the Economic Freedom Index and prepared the data, now we want to plot it. Therefore we use the `ggplot()` command. We want to have the years on the x-axis, which are stored in the variable `Year` and the score of the Economic Freedom Index on the y-axis which is stored in the variable `eco_fre`. The code is almost given, you have to complete the code with adding the variable names for the x and y values.

```{r "2_1_a_4", fig.width=7, fig.height=7}
#< fill_in
ggplot() +
  geom_line(data = dataEFI, aes(x = ___, y = ___, color = Country_group), show.legend = FALSE) +
  geom_point(data = dataEFI, aes(x = ___, y = ___, color = Country_group), show.legend = FALSE) +
  scale_color_manual(name = "", 
                    labels = c("EU East", "Non-EU East", "West"),
                    values = c("red", "orange", "blue")) +
  geom_text(aes(x=1995,y=68),label="West",colour="black",size=3) +
  geom_text(aes(x=1995,y=54),label="EU East",colour="black",size=3) +
  geom_text(aes(x=2017,y=61),label="Non-EU East",colour="black",size=3) +
  ggtitle("Economic Freedom Index") +
  xlim(1990,2020) +
  ylim(48,75) +
  ylab("Score from 0 to 100") +
  theme_minimal()
#>
ggplot() +
  geom_line(data = dataEFI, aes(x = Year, y = eco_fre, color = Country_group), show.legend = FALSE) +
  geom_point(data = dataEFI, aes(x = Year, y = eco_fre, color = Country_group), show.legend = FALSE) +
  scale_color_manual(name = "", 
                    labels = c("EU East", "Non-EU East", "West"),
                    values = c("red", "orange", "blue")) +
  geom_text(aes(x=1995,y=68),label="West",colour="black",size=3) +
  geom_text(aes(x=1995,y=54),label="EU East",colour="black",size=3) +
  geom_text(aes(x=2017,y=61),label="Non-EU East",colour="black",size=3) +
  ggtitle("Economic Freedom Index") +
  xlim(1990,2020) +
  ylim(48,75) +
  ylab("Score from 0 to 100") +
  theme_minimal()
```

Data is not fully available for the Non-EU East, but we can assume a similar trend as in the EU-East. The EU-East started with an initial level of 54.9 and the West with 66.0. In 2019, the last data point available, the West and the EU East are almost on the same level, with a gap of 2.1. Furthermore, the difference from the Non-EU East to the West was at the initial level in 2002 20.8 and in 2019 only 5.7.

**Task 2.1.5** 

After analyzing the Economic Freedom Index, we want to have a deeper look at the **Ease of Doing Business score**. The [Ease of Doing Business score](https://archive.doingbusiness.org/en/scores?topic) was part of the Doing Business Project from the World Bank. Unfortunately we only have data from 2010 onwards. The score ranges from 0 to 100, whereas a higher score means it is easier to start a business. For example a category is "starting a business", which gets evaluated by the number of procedures, time in days, costs and minimum capital in percent of income per capita. Other categories are dealing with construction permits, getting electricity or getting credit. All of the categories get evaluated by different aspects, which then in the end form together the Ease of Doing Business score. 

The code below prepares the data we use to evaluate the Ease of Doing Business score, by grouping after `Year` and `Country_group`. Afterwards we calculate the average score for `Ease_doing_Bus` over the country groups. Run the chunk and continue with the next task.

```{r "2_1_a_5"}
#< task
dataEODB <- datamacro %>%
  group_by(Year, Country_group) %>%
  summarize(Year,
            Country_group,
            ease_bus = mean(Ease_doing_Bus)) %>%
  distinct()
#>
```

**Task 2.1.6**

In the next step we want to plot the Ease of Doing Business score. Run the code and have a look at the graphs.

```{r "2_1_a_6", fig.width=7, fig.height=7}
#< task
ggplot() +
  geom_line(data = dataEODB, aes(x = Year, y = ease_bus, color = Country_group), show.legend = FALSE) +
  geom_point(data = dataEODB, aes(x = Year, y = ease_bus, color = Country_group), show.legend = FALSE) +
  scale_color_manual(name = "", 
                    labels = c("EU East", "Non-EU East", "West"),
                    values = c("red", "orange", "blue")) +
  geom_text(aes(x=2008,y=73),label="West",colour="black",size=3) +
  geom_text(aes(x=2007.5,y=67),label="EU East",colour="black",size=3) +
  geom_text(aes(x=2007,y=58),label="Non-EU East",colour="black",size=3) +
  ggtitle("Ease of Doing Business score") +
  xlim(1990,2020) +
  ylim(48,80) +
  ylab("Score from 0 to 100") +
  theme_minimal()
#>
```

We can see a strong growth in the EU East and Non-EU East. In 2019 the EU East has only a difference of 1.34 to the West and the difference from the Non-EU East to the West is only 4.43.  
In our data set, the countries with the highest Ease of Doing Business score are Denmark and the United Kingdom with an average score of 84.46 and 83.41, both from the West. The countries with the lowest Ease of Doing Business score are Bosnia and Herzegovina and Kosovo with an average score of 58.0 and 63.62, both from the Non-EU East. The countries with the highest average score in the EU East are Estonia with 78.04 and Latvia with 76.94.

b) In the next part of the exercise we will take a look on the **Public Sector Employment**.

With a strong intervention of the government into markets and state-owned productive resources comes a high employment in the public sector and in public companies. We are going to have a look at the **Public Sector Employment** in the EU East and in the West. Therefore we will analyze the share of employees working in the public sector and the share of employees working in public companies. Data is from the [International Labour Organization](https://ilostat.ilo.org/data/). The data contains information on annual numbers regarding public employment by sectors and total employment. Fuchs-Schündeln and Schündeln (2020) calculated the employment rates in public sector by dividing employment in public corporations by total employment. We do not have any data for the Non-EU East, for the EU-East Bulgaria, Croatia, Hungary and Romania are missing and data on public company employment is missing for Latvia for 2015. For the West data is missing for Austria, Belgium, France, the Netherlands and Portugal, for Denmark data is missing for 2014 and 2016. In general we do have data from 2000 onwards for the EU East and from 2001 onwards for the West.

**Task 2.1.7**

Run the code below to prepare the data. Since data is missing for some years, but we do not omit them completely, the `mean` function of R returns NA for the specific year. You can bypass this by using `na.rm = TRUE` as a second argument in the function. However, we want to have consistent countries throughout the analysis, so we do not use a second argument when calculating the averages.

```{r "2_1_b_7"}
#< task
dataPSE <- datamacro %>%
  filter(Country == "Denmark" | Country == "Greece" | Country == "Ireland" | Country == "Luxembourg" | Country == "Spain" | Country == "Sweden" | Country == "United Kingdom" | Country == "Czech Republic" | Country == "Estonia" | Country == "Latvia" | Country == "Lithuania" | Country == "Poland" | Country == "Slovak Republic" | Country == "Slovenia") %>%
  group_by(Year, Country_group) %>%
  summarize(Year,
            Country_group,
            publ_rate = mean(Public_empl_rate_ILO),
            publ_c_rate = mean(Publiccorp_empl_rate_ILO)) %>%
  distinct()
#>
```

**Task 2.1.8**

In the next part we will display the share of employees working in the public sector and in public companies. We create a plot using `ggplot()`. The plot shall show both rates. We want to have the years on the x-axis and the share of total employment on the y-axis. Furthermore we plot the rates regarding the employment in public companies as a dashed line.   
The code is there, run the chunk and have a look on the plot.

```{r "2_1_b_8", fig.width=7, fig.height=7}
#< task
ggplot() +
  geom_line(data = dataPSE, aes(x = Year, y = publ_rate, color = Country_group), show.legend = FALSE) +
  geom_point(data = dataPSE, aes(x = Year, y = publ_rate, color = Country_group), show.legend = FALSE) +
  geom_line(data = dataPSE, aes(x = Year, y = publ_c_rate, color = Country_group), linetype = "dashed", show.legend = FALSE) +
  geom_point(data = dataPSE, aes(x = Year, y = publ_c_rate, color = Country_group), size = 0.5, show.legend = FALSE) +
  scale_color_manual(name = "", 
                    labels = c("EU East", "West"),
                    values = c("red", "blue")) +
  geom_text(aes(x=1998,y=23),label="West, public sector",colour="black",size=3) +
  geom_text(aes(x=1998,y=29),label="EU East, public sector",colour="black",size=3) +
  geom_text(aes(x=1997.5,y=4),label="West, public companies",colour="black",size=3) +
  geom_text(aes(x=1998,y=10),label="EU East, public companies",colour="black",size=3) +
  ggtitle("Public Sector Employment") +
  xlim(1990,2020) +
  ylim(2,33) +
  ylab("Percent of total employment") +
  theme_minimal()
#>
```

The amount of workers working in the public sector was, especially in the years from 2001 to 2005, considerably higher in the EU East than in the West, with a maximum of 31% in 2001. This is 8 percentage points higher than the share of workers working in the public sector in the West in 2001. From the year 2010 on we can see a strong trend of the EU East converging to levels of the West. The share of workers in the West in the public sector is almost on the same level every year with a maximum of 25% in 2010 and a minimum of 23% in 2017.  
The dashed line regarding the employment in public companies shows a similar trend. In the West the share of workers in public companies was constantly around 4%. Whereas in the EU East it was the lowest in 2017 with 5% and the highest in 2001 with 12%.

We want to get more familiar about the general support for a market economy with analyzing attitudes towards a market economy in the next task.

#< award "The Economic Freedom Award"
Congratulations! You learned something about three indicators regarding the Economic Freedom. 
#>

## Exercise 2.2 -- Preferences for a Market Economy

The first part of the exercise has shown that the EU East and Non-EU East are converging towards levels of the West. We analyzed the development of three macro indicators, namely the Economic Freedom Index, Ease of Doing Business score and Public Sector Employment. All three indicators have shown bigger differences at the starting year of our data than they did at the last year of the data. With these indicators, we tried to visualize the transition from a central planned economy to a market economy. However, regarding these indicators are converging to levels of the West, there are still minor differences.    

In this part of the exercise we want to analyze if communism lead to differences in attitudes towards the market economy, which could be a reason for still existing differences. The economic system in the East has changed to a market economy and thus we want to analyze if it gets public support. Furthermore, we want to analyze if there are differences regarding those who lived longer in a communist system, than others. First we are going to analyze preferences across different birth-cohorts in the EU East, Non-EU East and West, then build a model similar to a differences-in-differences estimation and lastly support those findings with a regression analysis in the next exercise. Therefore we will use the `datapref` data set, create a plot to visualize preferences towards a market economy and afterwards perform a linear regression using the variable `prefer_market` as a dependent variable.

**Task 2.2.1** 

Load the data `JEP_Preferences_Data.rds` using the `readRDS()` command and assign it to the variable `datapref`.

```{r "2_2_1"}
datapref <- readRDS("JEP_Preferences_Data.rds")
```

The data set contains many different variables, important for the analysis of attitudes towards a market economy are `prefer_market`, `countryg` which represents the country group and `cohort_numeric`, which represents the cohort the respondent is in. `cohort_numeric` has a range from 1 to 4, 1 represents those born before 1945, 2 those born between 1945 and 1959, 3 those born between 1950 and 1974 and 4 those born after 1974. In the next step we will prepare the data so we can plot the preferences across the cohorts.

#< info "prefer_market"

The variable `prefer_market` describes attitudes towards the market economy. The authors used data from the Life in Transition Surveys (LITS) 2010 and 2016, which were collected by the European Bank for Reconstruction and Development in cooperation with the World Bank. It contains all Eastern European countries and some of the West, which is the reason they used the 2010 and 2016 surveys. The 2010 data contains France, Italy, Sweden and the United Kingdom while the 2016 data contains Greece. They evaluated the LITS question "With which one of the following statements do you agree most?" and created the variable `prefer_market` based on the results. It is 0 if the respondent chose "Under some circumstances, a planned economy may be preferable to a market economy." or "For people like me, it does not matter whether the economic system is organized as a market economy or as a planned economy." and 1 if the respondent chose "A market economy is preferable to any other form of economic system". The variable is coded as missing if the respondent chose "Don't know".

Source: Fuchs-Schündeln & Schündeln (2020) and [Life in Transition Survey (LITS)](https://www.ebrd.com/what-we-do/economic-research-and-data/data/lits.html)

#>

**Task 2.2.2** 

We create a new data set named `data_marketec` which is based on `datapref`. Afterwards we filter the years 2010 and 2016, which are the years the relevant surveys are from, and remove Germany. Next we group by `countryg` and `cohort_numeric` to perform the next operations for each country group and cohort. The last steps are to calculate the mean of `prefer_market`, weighted with the survey weights `weight_LITS` and multiply it with 100 to get outcomes of how many of the respondents prefer a market economy in percent. Furthermore we use `na.omit()` to remove rows containing NA's.

#< info "The TAM package"

The `TAM` (Test Analysis Modules) package is made for item response theory (IRT) analysis. It has many functionalities, among others the `weighted_Stats` part which contains descriptive statistics for weighted data. Specifically we are going to use the `weighted_mean` and `weighted_sd` functions from it. Those compute means and standard deviations with weights.

See https://cran.r-project.org/web/packages/TAM/index.html for more information about the `TAM` package.

#>

The code is almost given, you need to fill in the name of the data set which we use as a base and the variable name of the country groups and cohorts, we want to group by.

```{r "2_2_2"}
#< fill_in
data_marketec <- ___ %>%
  filter(year == 2010 | year == 2016) %>%
  subset(., countryname != "Germany") %>%
  group_by(___, ___) %>%
  summarize(cohort_numeric,
            countryg,
            marketec = weighted_mean(prefer_market, weight_LITS)*100) %>%
  distinct() %>%
  na.omit()
#>
data_marketec <- datapref %>%
  filter(year == 2010 | year == 2016) %>%
  subset(., countryname != "Germany") %>%
  group_by(countryg, cohort_numeric) %>%
  summarize(cohort_numeric,
            countryg,
            marketec = weighted_mean(prefer_market, weight_LITS)*100) %>%
  distinct() %>%
  na.omit()
```

**Task 2.2.3**

After preparing the data, we want to visualize it using the `ggplot2` package. We plot the cohorts on the x-axis and the share of respondents preferring a market economy on the y-axis. This is different than in the tasks before, the x-axis does not represent a timeline, it represents the splits we made in the sample. We use additionally `scale_x_continuous()` to replace the number of the cohort with a correct description. Furthermore we create a legend, and format it using `theme()` and `guides()`. 

#< info "theme() and guides()"

The functions `theme()` and `guides()` are both part of the `ggplot2` package.  

- `theme()`: will let you customize the theme of your plot, you can manually adjust the color of backgrounds, font sizes and much more. We use it to adjust the direction and position of the legend, furthermore we set a frame around the legend.

- `guides()`: will let you adjust the scale and what to display in the legend. We use it to define the width of our lines in the legend.

See https://ggplot2.tidyverse.org/reference/theme.html for more information about `theme()` and https://ggplot2.tidyverse.org/reference/guides.html for more information about `guides()`.

#>

The code for the plot is given, you just have to type in the missing parts for the x and y values.

```{r "2_2_3", fig.width=7, fig.height=7}
#< fill_in
ggplot() +
  geom_line(data=data_marketec, aes(x=___, y=___, colour = countryg)) +
  geom_point(data=data_marketec, aes(x=___, y=___, colour = countryg)) +
  scale_color_manual(name = "", 
                    labels = c("EU East", "Non-EU East", "West"),
                    values = c("red", "orange", "blue")) +
  ylim(19,100) +
  ggtitle("Support for market economy") +
  ylab("Respondents\nsupportive (percent)") + 
  scale_x_continuous(breaks = c(1,2,3,4),
                     labels = c("Born \nbefore 1945","Born \n1945 - 1959","Born \n1960 - 1974","Born \nafter 1974")) + 
  xlab("") +
  theme_minimal() +
  theme(legend.direction = "horizontal", legend.position = "bottom", legend.background = element_rect(fill = "white", colour = "gray30")) +
  guides(colour=guide_legend(keywidth = 3, keyheight = 1))
#>
ggplot() +
  geom_line(data=data_marketec, aes(x=cohort_numeric, y=marketec, colour = countryg)) +
  geom_point(data=data_marketec, aes(x=cohort_numeric, y=marketec, colour = countryg)) +
  scale_color_manual(name = "", 
                    labels = c("EU East", "Non-EU East", "West"),
                    values = c("red", "orange", "blue")) +
  ylim(19,100) +
  ggtitle("Support for market economy") +
  ylab("Respondents\nsupportive (percent)") + 
  scale_x_continuous(breaks = c(1,2,3,4),
                     labels = c("Born \nbefore 1945","Born \n1945 - 1959","Born \n1960 - 1974","Born \nafter 1974")) + 
  xlab("") +
  theme_minimal() +
  theme(legend.direction = "horizontal", legend.position = "bottom", legend.background = element_rect(fill = "white", colour = "gray30")) +
  guides(colour=guide_legend(keywidth = 3, keyheight = 1))
```

At first glance, we see that in all groups and cohorts less than 50 percent have the opinion that a market economy is preferable to any other economic system. The average support for a market economy in the West is 42%, which is only 1 percentage point lower than the average in the Non-EU East with 41%. In the EU East the average is 34%, which is significantly lower than in the West (8 percentage points) and in the Non-EU East (7 percentage points). Our guess that living under communism might affect preferences regarding a market economy could be true. The similarity in average support for a market economy, especially in the Non-EU East and West though goes in hand with the analysis of the indicators regarding economic freedom. However, Fuchs-Schündeln & Schündeln (2020) argue that any difference between East and West in preferences does not have to be an effect of living under communism for almost 50 years, it could have existed already before communism. To get insights into causality we have to look specifically into the different cohorts. Interesting is that support for a market economy is highest in the West in the oldest cohort, in the EU East and Non-EU East the highest support comes from the youngest cohort. Both, the EU East and Non-EU East have more support for a market economy in younger cohorts than in older cohorts. This is consistent with the statement that living longer under communism causally leads to differences in preferences towards a market economy.    

#< award "Preferences for a Market Economy"
Congratulations! You got introduced to preferences for a market economy and are now ready to dig deeper.
#>

### Estimation of the causal effect

As Laudenbach et al. (2019) point out, living a long time under communism has long term effects on political preferences regarding support for a communist system. Those effects still remain, even though people live in a capitalist system today. This effect could be the outcome of indoctrination by growing up in a communist household, receiving communist education and getting used to living in a communist system with e.g. an intrusive and broad public sector (Alesina & Fuchs-Schündeln, 2007). Communist education had the main purpose that students create awareness of serving the society and intensifying communist consciousness. This resulted in teaching communist values as well as providing the necessary knowledge and skills, like teaching political theory. Political theory played a big role in school education as well as in higher education. The goal was not to secure allegiance of the people, it was more to give a broad understanding of society and to convict people of communism rather than enforcing them. Furthermore they tried to motivate the people to be an active part in the society and to be an active part in the democracy for the people, as it was written in the school curricula (Grant, 1969).

We are going to investigate those effects more in detail and how living under communism affected attitudes towards a market economy. We compare a group of older people, which have been raised under communism, with a group of younger people that did not live that long under communism. Hence we do not distinguish between the EU East and Non-EU East anymore. We focus on the East first and include the West later. First we need to split our data, to get a sample of a young and old group.

**Task 2.2.4**

We create a new data set with the name `datadiff`, which is based on our initial data set `datapref`. We set a filter to exclude Germany and filter only for observations from respondents born before or in 1960 or in 1980 or later. Specifically, we filter after the variable `birthyear` less or equal 1960 or greater or equal 1980. Afterwards we select only the relevant variables and generate a new dummy variable called `old` which is 1 if the respondent is born in or before 1960, this gets done with taking use of the `ifelse()` command. Eventually we use the command `na.omit()` to make the data set clearer. 

#< info "ifelse()"

The `ifelse()` command is useful to create new variables based on a condition. The syntax contains three arguments `ifelse(test, yes, no)`

- `test`: condition that gets tested, has to result in either TRUE or FALSE

- `yes`: if the condition is TRUE, the variable returns the value assigned, possible to be a mathematical expression

- `no`: if the condition is FALSE, the variable returns the value assigned in this argument, possible to be a mathematical expression

Source: https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/ifelse

#>

Fill in the missing pieces in the `filter()` and `ifelse()` command as described above.

```{r "2_2_4"}
#< fill_in
datadiff <- datapref %>%
  filter(countryname != "Germany" & (birthyear <= ___ | birthyear >= ___)) %>%
  select(year, birthyear, prefer_market, East2) %>%
  mutate(old = ifelse(birthyear <= ___, 1, 0)) %>%
  na.omit()
#>
datadiff <- datapref %>%
  filter(countryname != "Germany" & (birthyear <= 1960 | birthyear >= 1980)) %>%
  select(year, birthyear, prefer_market, East2) %>%
  mutate(old = ifelse(birthyear <= 1960, 1, 0)) %>%
  na.omit()
```

**Task 2.2.5**

Now we want to get an overview over the data. Use the command `slice_sample()` to display ten random rows of the data set.

```{r "2_2_5"}
slice_sample(datadiff, n = 10)
#< hint
display("That is not correct. The syntax is 'slice_sample(datadiff, n = ...)', whereas n represents the number of rows you want do show.")
#>
```

- `year`: represents the year the survey was taken, the options are 2006, 2010 or 2016

- `birthyear`: the year of birth of the respondent

- `prefer_market`: dummy variable, 1 if the respondent prefers a market economy over a planned economy

- `East2`: dummy variable, 1 if the respondent is from the East

- `old`: dummy variable, 1 if the respondent was born in or before 1960

To get more insights on the effects of communism regarding support for a market economy, we calculate the average support for a market economy in our data for the old and young group. Therefore we define the mean variables $\overline{y}_{old,east}$ and $\overline{y}_{young,east}$. If it is true that the effects of communism are long lasting, we would expect a lower support for a market economy from the old group than from the young group. Since we analyze a dummy variable which is either 1 and thus represents support for a market economy or 0 and thus represents no support for a market economy, we can interpret the results in %.

**Task 2.2.6**

We create two data sets which are based on `datadiff` and apply a filter to select only observations from the East and from the old (young) group. Afterwards we compute the mean of `prefer_market` from the respective data set, which we store in the variables `y_old_east` and `y_young_east`. Eventually we type the name of the variable to display the value. This approach of creating separate data sets for each average has the advantage, that the values get directly stored in the particular variable and not in a new data frame.   
The code for the average of the older group is given, you have to complete the filter for the young group.

```{r "2_2_6"}
#< fill_in
y_old_east_data <- datadiff %>% filter(old == 1 & East2 == 1)
y_old_east = mean(y_old_east_data$prefer_market)
y_old_east

y_young_east_data <- datadiff %>% filter(___)
y_young_east = mean(y_young_east_data$prefer_market)
y_young_east
#>
y_old_east_data <- datadiff %>% filter(old == 1 & East2 == 1)
y_old_east = mean(y_old_east_data$prefer_market)
y_old_east

y_young_east_data <- datadiff %>% filter(old == 0 & East2 == 1)
y_young_east = mean(y_young_east_data$prefer_market)
y_young_east
```

As expected, support for a market economy is higher in a group of younger people than in a group of older people, which have been raised in a communist system. If we compare those values we get the following difference:
$$
\overline{y}_{old,east} - \overline{y}_{young,east} = 0.341 - 0.449 = -0.108
$$
This means that people experiencing at least 30 years of communism have on average 10.8 percentage points less support for a market economy than people who lived a maximum of ten years under communism.   
But how can we be sure this is an effect from communism? It could be the case that younger people in general have different attitudes towards a market economy than older people, no matter communist education or not. Therefore we are going to consider the East and West in the following.

To estimate the causal effect that communism affects preferences, we are going to develop a model which is similar to a difference-in-difference estimation. I will explain the idea of the difference-in-difference estimation and how we will adapt it throughout the next tasks.

A difference-in-difference estimation is used to examine the causal effect of a treatment for some type of reaction. In our case, we analyze how living longer under communism affects the preferences towards a market economy. Also it could be the case that it does not affect preferences at all, which we will find out with that approach too. A difference-in-difference estimation compares the effects of a policy change before and after the treatment, therefore a treatment and control group is needed, as well as two time periods (Stock & Watson, 2020). 

- `treatment group`: receives treatment

- `control group`: not affected from policy change

- `pre-experimental phase`: time period without any policy change

- `experimental phase`: time period with policy change

Before we define our groups we need to figure out what we want to analyze with the difference-in-difference estimation. **The goal of the estimation is to get the difference of the effect of communist education in attitudes towards a market economy**. This means that we want to see whether there are differences in attitudes towards a market economy between older and younger people in the East and West. Next we are going to compare those differences to get the effect of living under communism.  
We define the East as our treatment group and the West as our control group. Our data is already split in East and West, as well as in old and young. Here is where our approach differs from the theoretical idea of the difference-in-difference estimation. We do not have two time periods of observations where we can perceive a treatment effect, though we do have data which contains the year of birth, which results in an old and young group of which the old group from the East received the policy change by changing from a communist system to a capitalist system in 1989. Thus we handle the old group as it would be the experimental phase and the young group as the pre-experimental phase. In this way we can show how receiving education and living under communism affected attitudes towards a market economy.

#< quiz "Maximum average support for market economy"

question: You know the average support for the East already, what do you think, which group from which period has the highest average support for a market economy?
sc:
    - Older group from the East
    - Older group from the West
    - Younger group from the East*
    - Younger group from the West
    
success: The answer is correct! We will calculate the averages of the West in the next task.
failure: Try again.

#> 
<br>
**Task 2.2.7**

We are going to compute the average support for a market economy from the West in this task. We define the mean variables $\overline{y}_{old,west}$ and $\overline{y}_{young,west}$ and store the values in `y_old_west` and `y_young_west`. You have to complete the code for the filter, the approach is the same as in the last task.

```{r "2_2_7"}
#< fill_in
y_old_west_data <- datadiff %>% filter(___)
y_old_west = mean(y_old_west_data$prefer_market)
y_old_west

y_young_west_data <- datadiff %>% filter(___)
y_young_west = mean(y_young_west_data$prefer_market)
y_young_west
#>
y_old_west_data <- datadiff %>% filter(old == 1 & East2 == 0)
y_old_west = mean(y_old_west_data$prefer_market)
y_old_west

y_young_west_data <- datadiff %>% filter(old == 0 & East2 == 0)
y_young_west = mean(y_young_west_data$prefer_market)
y_young_west
```

We see that both values are greater than 0.4. If we compare them, we get a difference of -0.013.

$$
\overline{y}_{old,west} - \overline{y}_{young,west} = 0.403 - 0.416 = -0.013
$$
This means that older people from the West have on average 1.3 percentage points less support for a market economy than younger people from the West.  

We create a matrix consisting of $\overline{y}_{old,east}$, $\overline{y}_{young,east}$, $\overline{y}_{old,west}$, $\overline{y}_{young,west}$ and the differences in the next task. Furthermore we round all values to three digits and use the `kableExtra` package to display the matrix.

**Task 2.2.8**

Run the code and have a look at the matrix.

```{r "2_2_8", results = 'asis'}
#< task
round(matrix(c(y_old_east,y_young_east,-0.108,y_old_west,y_young_west,-0.013),
       ncol = 2,
       dimnames = list(c("Old group","Young group","Difference"),
                       c("East","West"))), 3) %>%
  kbl() %>%
  kable_styling(full_width = FALSE) %>%
  column_spec(1, bold = T)
#>
```

<br>
Since we have all four averages together, we can now compare those between the treatment and control group by using the logic of the difference-in-difference estimator (DiD). The DiD estimator gets computed as the following.
$$
DiD = (\overline{y}_{exp,treat} - \overline{y}_{pre,treat}) - (\overline{y}_{exp,control} - \overline{y}_{pre,control})
$$
The equation says that the DiD estimator represents the average change in $y$ in the treatment group minus the average change in $y$ in the control group. That estimates the causal effect of the treatment, because it corrects the change in the treatment group by the control group, so already existing differences get eliminated (Stock & Watson, 2020).  
If we replace the means with our variables, we get the following equation for the DiD estimator.
$$
DiD = (\overline{y}_{old,east} - \overline{y}_{young,east}) - (\overline{y}_{old,west} - \overline{y}_{young,west})  
$$
<br>
**Task 2.2.9** 

Compute the DiD estimator by completing the equation with the variable names of the averages according to the equation above.

```{r "2_2_9"}
#< fill_in
DiD = ___
DiD
#>
DiD = (y_old_east - y_young_east) - (y_old_west - y_young_west)
DiD

#< hint
display("You have to add the correct calculation of the DiD estimator. Do not forget to set the parentheses.")
#>
```

$$
DiD = (0.341 - 0.449) - (0.403 - 0.416) = -0.095
$$
We get a DiD estimator of **-0.095**. Since it has a negative value, the difference in support for a market economy between the old and young group is larger in the East than in the West. We estimate that the average support for a market economy is 9.5 percentage points lower in a group, which experienced more than 30 years of communism, compared to a group experienced a maximum of ten years of communism. 

It is more typical to compute the difference-in-difference estimator by creating a linear model and not to calculate it by hand. Using a linear model has several advantages, e.g. allows that to get standard errors of the effect and one can take more effects into consideration. However, calculating the estimator by hand makes it easier to understand and interpret the model.  
We will compute the DiD estimator with a linear regression in the next task and extend our model to include more relevant effects.

#< award "Differences Master"
Great! You developed your own model, which follows a difference-in-difference approach.
#>

## Exercise 2.3 -- Estimating DiD with Linear Regression

We got to know the difference-in-difference estimation in the last task and learned a lot about preferences for a market economy. This task has the focus of computing a linear model to support the findings from the last task. Therefore we start with a linear regression regarding the model in the last task and work towards a more complex approach which we will compute in the next task.  
If you are not familiar with linear models, there is a brief introduction to the basics of regression theory in the info box below. However, we focus on linear regression for a difference-in-difference estimation, which is a bit different compared to the regression theory below. Nevertheless, understanding the basics of linear regression is a good foundation for the following tasks.

#< info "Regression theory"

#### Simple regression model  

A basic regression model tries to explain the relationship between two variables, which we name $y$ and $x$. For example, $y$ could be the score a student gets in an exam and $x$ could be the hours a student invested in preparing for the exam. We are interested in explaining $y$, the score, with $x$, the study time. Therefore we can write down a equation for a simple linear regression model.
$$
y = \beta_0+\beta_1 x+ \varepsilon
$$
In this model, y would be defined as the dependent, the explained variable and x as the independent, the explanatory variable. The model is also called a *two-variable linear regression model*. The variable $\varepsilon$ is called the error term, it contains all possible components, without $x$ that affect $y$. The intercept parameter $\beta_0$, also called constant term, is mostly not that relevant to an analysis. More relevant is the parameter $\beta_1$, which is called the slope parameter. It represents how $y$ changes, by multiplying $\beta_1$ with the change of $x$.   

#### Multiple regression model  

A multiple regression model is the extension to our simple model, which means that we extend it by adding more *control variables* to it. Referring to the above example, $y$ is still the score of the exam, but now we want to consider more than just the time a student studied. We could also add the hours a student participated in classes to our model. This means now we want to explain the score $y$, with the study time $x_1$ and the time attended to classes $x_2$. We could extend this model as long as we want, but it is important to know that adding as many control variables as possible does not lead to the best model.
$$
y = \beta_0+\beta_1 x_1 +\beta_2 x_2 +\ldots+\beta_n x_n + \varepsilon
$$
If we compute the regression we get the **ordinary least squares** (**OLS**) estimators $\hat{\beta_0}$ and $\hat{\beta_1}$, which we can then use to compute the estimated values $\hat{y}$. Furthermore we have the residuals, which are the estimated values $\hat{y}$ subtracted from the actual values $y$. These $residuals$ $(y - \hat{y})$ form the error term which we want to minimize with the linear model.

#### The OLS Assumptions

1. Linearity: The dependent variable can be explained as a function of independent variables and a error term, i.e. $y = \beta_0+\beta_n x_n+ \varepsilon$

2. No Endogenity: The expected value of the error term is zero, i.e. $\mathbb{E}(\varepsilon)=0$

3. Homoskedasticity: The error terms all have the same variance and are not correlated with one another

4. Random Sampling: Sample of observations on the independent variables can be redraw with the same variable values

5. No perfect multicollinearity: The number of observations has to be greater than the number of independent variables and there are no perfect linear relationships between the independent variables.

With assumption 3 there are two major problems that can come up. The first one is *Heteroskedasticity*, it occurs when the error terms do not all have the same variance. The second one is *Autocorrelation of the error terms*, this one occurs when the error terms are correlated with each other.

If all five of the assumptions are true, the OLS estimator is the best linear unbiased estimator (BLUE). This is often referred to as the Gauss-Markov theorem and thus the five assumptions are also called Gauss-Markov assumptions. 

#### Holding fixed effects  

Since this is going to be important, I will explain what it means if we hold fixed effects in a linear model. With controlling for group fixed effects, it is possible to simulate the situation of holding certain variables fixed in obtaining the sample. This means you control for group fixed effects if you add a separate dummy variable for each expression of the variable. Fortunately there is a function in R and we do not have to do this by hand.  
Controlling for fixed group effects is important if the data falls into categories.

Source: Kennedy (2008), Verbeek (2004) & Wooldridge (2013)

#>

**Task 2.3.1**

Load the data `JEP_Preferences_Data.rds` using the `readRDS()` command and assign it to the variable `datapref`.

```{r "2_3_1"}
datapref <- readRDS("JEP_Preferences_Data.rds")
```

**Task 2.3.2** 

Next we create a new data set which we name `datadiff`. It is based on `datapref`, we remove observations from Germany and split the data in observations from respondents born in or before 1960 and in observations from respondents born in or after 1980. We select only the relevant variables and generate two new variables. The first one is a dummy variable which we name `old`, it is 1 one if the respondent is born in or before 1960. The second one is called `East_old`, it is an interaction term of the variables `East2` and `old`. This one is going to be important in estimating the DiD estimator.

Run the chunk to prepare the data.

```{r "2_3_2"}
#< task
datadiff <- datapref %>%
  filter(countryname != "Germany" & (birthyear <= 1960 | birthyear >= 1980)) %>%
  select(year, birthyear, prefer_market, East2) %>%
  mutate(old = ifelse(birthyear <= 1960, 1, 0),
         East2_old = East2 * old) %>%
  na.omit()
#>
```

Typically, a difference-in-difference model gets estimated as the following linear regression, consisting of the dummy variables `treat` and `exp` and the interaction term of those. Those dummy variables clarify if an observation is from the treatment or control group and wheter it is in the pre-experimental or experimental phase. The DiD estimator is the OLS estimator $\hat{\beta_1}$. The interaction term is 1 for observations from the experimental period that were actually treated.
$$
y_{i,t} = \beta_0 + \beta_1treat_i\cdot exp_t  +\beta_2 treat_i +\beta_3 exp_t + \varepsilon_{i,t}
$$
If we transfer this linear model, we get the following equation.
$$
prefer{\_}market_{i,t} = \beta_0 + \beta_1East2_i\cdot old_t  +\beta_2 East2_i +\beta_3 old_t + \varepsilon_{i,t}
$$
The interaction term is 1 if the country $i$ the respondent is from, is from the East and the year of birth $t$ from the respondent is in 1960 or earlier. $\hat{\beta_1}$ represents the causal effect of being from the East and the old group regarding support for a market economy. It represents how the difference between East and West has changed in the old group, compared to the young group.

**Task 2.3.3**

We estimate the regression in this task with the `lm()` command and save it in the variable `reg_diff`.

#< info "lm()"

The command `lm()` from the `stats` package is used to fit linear models. Its syntax is very simple:

- `lm(dependent variable ~ independendent variable 1 + independendent variable 2 + ..., data = name of data)`

There are many more options, see https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/lm for more information.

#>

Type in the missing names of the variables, if you do not remember them just have a look at the equation above.

```{r "2_3_3"}
#< fill_in
reg_diff <- lm(___ ~ East2_old + ___ + ___ , data = datadiff)
#>
reg_diff <- lm(prefer_market ~ East2_old + East2 + old, data = datadiff)
```

**Task 2.3.4**

After computing the linear regression, we want to display it. Therefore we take use of the `stargazer` package.

#< info "The stargazer package"

The `stargazer` package has a lot of options to create beautiful tables in ASCII text, HTML code or LaTeX code containing results of regression analysis, data frames, matrices and more. You need to type the command `stargazer()` and fill it with arguments, there is a brief overview over the most important features. The first arguments are the names of the variables assigned to the linear models. 

- `type = ...`: defines the output format

- `title = ...`: title of the table

- `dep.var.labels = ...`: character vector that labels the dependent variables

- `column.labels = ...`: character vector that labels the columns of the table

- `covariate.labels = ...`: character vector that labels the independent variables

- `keep.stat = ...`: character vector that specifies the statistics which should be shown in the table

- `add.lines = ...`: list of vectors which should be displayed in the table, each element of a vector is in a separate column

See https://www.rdocumentation.org/packages/stargazer/versions/5.2.3/topics/stargazer for more information about the `stargazer` package.

#>

As a reminder, we computed a DiD estimator of -0.095 in the last task.  
Run the code and have a look at the results of the linear regression in the table.

```{r "2_3_4", results = 'asis'}
#< task
library(stargazer)

stargazer(reg_diff, 
          type = "html",
          title = "Regression Results",
          dep.var.labels = c("Support for Market Economy (%)"),
          covariate.labels = c("EastxOld", "East", "Old"),
          keep.stat = c("rsq", "n"))
#>
```

<br>
The value of $\hat{\beta_1}$ is with -0.095 the same as the DiD estimator we computed by hand. Furthermore the coefficient is highly statistical significant, indicated by the *** next to the value. This means we have a p-value for the coefficient smaller than 0.01. A small p-value indicates a relation of the independent variable with the dependent variable (Wooldridge, 2013). However, Wooldridge (2013) argues that focusing on statistical significance may lead to false conclusions regarding the importance of variables. It is important to challenge the variables in a practical sense. We estimated the causal effect of $\hat{\beta_1} = -0.095$, so the difference in support for market economy is 9.5 percentage points lower between the old and young group in the East than in the West. The base value, meaning `East2` and `old` are both 0, being in the young group and from the West, has on average 41.6% support for a market economy. This is 18% more than the average support from a respondent of the old group and from the East with on average 34.1%. 

We developed a simpler model in this exercise on our own. In the next exercise we want to develop a more complex version of the model, following the approach done by Fuchs-Schündeln & Schündeln (2020) in the original paper. It still follows a similar idea as the difference-in-difference estimation, but can not be computed by hand anymore.

#< award "Linear Regression Beginner"
Well done! You computed your first linear regression.
#>

## Exercise 2.4 -- Regression Analysis

The model we built in the last tasks analyzed the effects of living a longer time under communism. This was indicated by the interaction term between the East dummy and the dummy variable for the old group. We do not split the sample based on the year of birth in the following anymore, which means that we take every respondent into the model. We regress attitudes towards a market economy on country-year fixed effects, the year of birth of the respondent and the year of birth interacted with a dummy for the East, which is one if the respondent comes from the East. Specifically, we hold fixed country and year of birth effects and focus on the interaction term between East and birth year. Given that interaction term, we get insights on differences between younger and older people, which is the other way round compared to the last task. If the interaction term does not equal zero, there are differences in attitudes towards a market economy. To be precise, we test the hypothesis  whether differences in attitudes towards a market economy between younger and older people are larger in the East than in the West. Furthermore, we take more into consideration than just being from the East and living a longer time under communism. The hypothesis is true, if the interaction term is positive (Fuchs-Schündeln & Schündeln, 2020).

**Task 2.4.1**

Run the chunk to load the data `JEP_Preferences_Data.rds` which we assign to `datapref`.

```{r "2_4_1"}
#< task
datapref <- readRDS("JEP_Preferences_Data.rds")
#>
```

**Task 2.4.2**

Before we compute the regression, we need to prepare the data. We use the data `datapref`, it contains already the relevant variables, we just need to set a filter to remove Germany. Furthermore, we remove the rows containing missing values of the variables we will use in the regression.

Type in the missing name of the data set we want to modify and assign it to the variable which we name `datareg1`.

```{r "2_4_2"}
#< fill_in
___ <- ___ %>%
  filter(countryname != "Germany") %>%
  drop_na(prefer_market, birthyear10, East2_birthyr10, male, unemployed_All, countryyear, countryname, weight_LITS)
#>
datareg1 <- datapref %>%
  filter(countryname != "Germany") %>%
  drop_na(prefer_market, birthyear10, East2_birthyr10, male, unemployed_All, countryyear, countryname, weight_LITS)
```

Because we removed Germany and the rows not containing information from the LITS data, we only have 60 743 observations left, which is the exact amount of observations we take into consideration for the regression. Before performing the regression, below is a brief overview over the variables we are going to use.

- `prefer_market`: a dummy variable describing attitudes towards a market economy, more detailed description in the info box at the beginning of Exercise 2.2

- `birthyear10`: the year of birth of the respondent, divided by 10 

- `East2_birthyr10`: a dummy variable whether the respondent is from the East or not, interacted with the variable `birthyear10`, it equals zero if the respondent is not from the East

- `male`: a dummy variable which is 1 if the respondent is male

- `unemployed_ALL`: a dummy variable which is 1 if the respondent was unemployed during the survey

- `countryyear`: a unique group identifier based on the name of the country and the year the data is from

- `countryname`: name of the country the respondent is from

- `weight_LITS`: survey weights of the Life in Transition Survey

Dividing the year of birth by 10 has the advantage that it reduces the number of digits we need to show in the table, thus the coefficients regarding the year of birth and the interaction term show effects for a change by ten years and not by one.

We compute a ordinary least squared regression, including the interaction term `East2_birthyr10`, `birthyear10` and control for `countryyear` fixed effects. Controlling for group fixed effects means, that we add separate dummies as control variables for each specification of `countryyear`. We do this because we assume that our data has a categorial structure, based on each country and the year of the survey.

**Task 2.4.3**

In the following we perform a OLS regression, using `prefer_market` as dependent variable and control for the interaction term between East and the year of birth `East2_birthyr10`. Furthermore we take `birthyear10` as independent variables and control for `countryyear` fixed effects. We use the function `felm()` from the `lfe` package.

#< info "felm()"

The function `felm()` is part of the `lfe` package.  
It is used to fit linear models with multiple group fixed effects. The function can be used to fit ordinary least squared (OLS), as well as weighted least squared (WLS) models.
With using the optional argument `weights = ...` it fits a weighted least squared (WLS) model. If `weights = ...` is not defined it fits a ordinary least squared model (OLS).

An example of a linear model with the `felm()` function could be the following. 
```{r "2_4_3_1", optional = TRUE, eval = FALSE}
reg <- felm(wage ~ educ + experience | birthyear | 0 | country, data = data_money, weights = weights_wage)
```
In the first part, consisting of the ordinary covariates of the linear model, `wage` is the dependent variable and `educ` and `experience` are independent variables. The second part with the variable `birthyear` indicates that we control for `birthyear` group fixed effects. The third part, which equals a zero and is thus not considered in the model, indicates an instrumental variable specification. The last part is for clustering standard errors, which are clustered on `country` level in the example. Furthermore the data used is `data_money` and it is a weighted least squared (WLS) regression with `weights_wage` as weights.

See https://www.rdocumentation.org/packages/lfe/versions/2.8-8/topics/felm for more information about `felm()`.

#>

The command for the regression is already there, just press **check**.

```{r "2_4_3"}
#< task
library(lfe)

reg1_1 <- felm(prefer_market ~ East2_birthyr10 + birthyear10 | countryyear | 0 | 0 , data = datareg1)
#>
```

**Task 2.4.4**

After computing the regression, we will display it using the `stargazer` package. Run the code and have a look at the regression results.

```{r "2_4_4", results = 'asis'}
#< task
stargazer(reg1_1, 
          type = "html",
          title = "Regression Results",
          dep.var.labels = "Support for Market Economy (%)",
          column.labels = c("OLS"),
          covariate.labels = c("EastxBirthYear<sup>-10<sup>", "BirthYear<sup>-10<sup>"),
          keep.stat = c("rsq", "n"),
          add.lines=list(c('CountryxYear fixed effects', 'Yes')))
#>
```

<br>
We see a positive coefficient of the interaction term. This indicates that the difference of support for a market economy across cohorts, is greater in the East than in the West. However, there could be some effects we did not take into consideration with our linear model.  
To counteract this, we include the dummy variable `unemployed_ALL` to tackle the issue that there might be cohort-specific unemployment shocks, specifically in the time of the transition from a planned to a market economy. Those could affect preferences from older people more than from younger people. Furthermore we add the dummy variable `male` to the regression, to control for possible differences in gender.

**Task 2.4.5**

In the following we perform a second OLS regression, using `prefer_market` as dependent variable and control for the interaction term between East and the year of birth `East2_birthyr10`. Moreover we consider `birthyear10`, `male` and `unemployed_ALL` as independent variables into the regression and control again for `countryyear` fixed effects. We use the function `felm()` from the `lfe` package.

The command for the regression is already there, just press **check**.

```{r "2_4_5"}
#< task
reg1_2 <- felm(prefer_market ~ East2_birthyr10 + birthyear10 + male + unemployed_All | countryyear | 0 | 0 , data = datareg1)
#>
```

**Task 2.4.6**

After computing the second regression, we will display both using the `stargazer` package. Run the code and have a look at the regression results.

```{r "2_4_6", results = 'asis'}
#< task
stargazer(reg1_1, 
          reg1_2,
          type = "html",
          title = "Regression Results",
          dep.var.labels = "Support for Market Economy (%)",
          column.labels = c("OLS", "OLS"),
          covariate.labels = c("EastxBirthYear<sup>-10<sup>", "BirthYear<sup>-10<sup>", "Male", "Unemployed"),
          keep.stat = c("rsq", "n"),
          add.lines=list(c('CountryxYear fixed effects', 'Yes', 'Yes')))
#>
```

<br>
We see that the coefficient for the interaction term is still positive, which indicates that the difference of support for a market economy across cohorts, is larger in the East than in the West. Since our data is built from different countries it may have inconstant variance of the residuals, which means that there is a big chance we have heterokedasticity. Thus we should test the model for heteroskedasticity, we can do this by taking use of the Breusch-Pagan test. If the p-value of the test is lower than a common significance level of 5%, we have heteroskedasticity (Kleber & Zeileis, 2008).

#< info "Breusch-Pagan test for heteroskedasticity"

A popular method to test whether there is heteroskedasticity in a linear model or not, is to use the Breusch-Pagan test, from Breusch and Pagan (1979).  
The idea behind the test is that it fits a linear regression to the squared residuals $\varepsilon_{i}^2$. If there is heteroskedasticity or not can be detected by testing the slopes of these variables, where we think there might be heteroskedasticity, against zero. 

See Kennedy (2008, p.116f.) or Verbeek (2004, p.91f.) for a more detailed explanation.

#>

**Task 2.4.7**

To perform a Breusch-Pagan test, we need to load the library `lmtest`. Afterwards we type the command `bptest()` and the variable name of the model or the linear model directly into the parenthesis. 

```{r "2_4_7"}
#< task
library(lmtest)
bptest(reg1_2)
#>
```

As we can see, the p-value is lower than a common significance level of 5%. This results in heteroskedasticity in our model. We can handle this by computing a weighted least squared regression. Furthermore we can assume that out data is composed of several clusters, which leads to false p-values. The data is based on observations from several countries, thus we can assume a clustered structure based on countries. Hence we compute cluster robust standard errors, clustering by the name of the country. 

#< award "The Breusch-Pagan Award"
Good! You learned when and how to conduct a Breusch-Pagan test.
#>

#< info "Weighted Least Squares"

One possible option to deal with heteroskedasticity is to perform a weighted least squares (WLS) regression.  
As explained, heteroskedasticity means that the error terms do not have the same variance. Thus we can make the following assumption.
$$
Var(\varepsilon|x) = \sigma^2 h(x)
$$
This means that the variance of the error terms, given the explanatory variables, is the population parameter $\sigma^2$ times $h(x)$. The function $h(x)$ is a function of the explanatory variables which describes the heteroskedasticity and we can estimate $\sigma^2$ from our sample. With the above assumption, we can transform our basic linear model with heteroskedastic errors to a model with homoskedastic errors. The idea of the ordinary least squared regression (OLS) is to minimize the sum of squared residuals, to handle the heteroskedasticity we want to minimize the weighted sum of squared residuals. Given that $h(x)$ is a function of the explanatory variables defining the heteroskedasticity, we can weight each squared residual with $1/h_i$. With this weight, the observations with a higher error variance have less weight in the linear model and we get homoskedastic error terms.

See Kennedy (2008, p.115), Kleiber & Zeileis (2008, p.76) or Wooldridge (2008, p.280) for a more detailed explanation.

#>

Lucky for us, Fuchs-Schündeln & Schündeln (2020) put the survey weights into the data, which are stored in the variable `weight_LITS`.

**Task 2.4.8**

In this task we compute the weighted least squared (WLS) regression and additionally create cluster-robust standard errors. The code is given, just press **check**.

```{r "2_4_8"}
#< task
reg1_3 <- felm(prefer_market ~ East2_birthyr10 + birthyear10 + male + unemployed_All | countryyear | 0 | countryname , data = datareg1, weights = datareg1$weight_LITS)
#>
```

After computing two OLS linear regressions, detecting that we have heteroskedasticity and then computing a WLS linear regression to handle heteroskedasticity, we now want to display both OLS and the WLS regressions. 

**Task 2.4.9**

We want to display all regression results in the last part of the exercise, we take use of the `stargazer` package therefore.

Type in the missing variable names of the regressions we defined earlier. Display as first and second the two ordinary least squared (OLS) regression and as third the weighted least squared regression (WLS).

```{r "2_4_9", results = 'asis'}
#< fill_in
stargazer(___, 
          ___,
          ___,
          type = "html",
          title = "Regression Results",
          dep.var.labels = "Support for Market Economy (%)",
          column.labels = c("OLS", "OLS", "WLS"),
          covariate.labels = c("EastxBirthYear<sup>-10<sup>", "BirthYear<sup>-10<sup>", "Male", "Unemployed"),
          keep.stat = c("rsq", "n"),
          add.lines=list(c('CountryxYear fixed effects', 'Yes','Yes','Yes')))
#>
stargazer(reg1_1, 
          reg1_2,
          reg1_3,
          type = "html",
          title = "Regression Results",
          dep.var.labels = "Support for Market Economy (%)",
          column.labels = c("OLS", "OLS", "WLS"),
          covariate.labels = c("EastxBirthYear<sup>-10<sup>", "BirthYear<sup>-10<sup>", "Male", "Unemployed"),
          keep.stat = c("rsq", "n"),
          add.lines=list(c('CountryxYear fixed effects', 'Yes','Yes','Yes')))
```

<br>
The first thing that stands out is that all three coefficients of the OLS and WLS regressions are different, which obviously makes sense since these are three different linear models. Furthermore the standard errors of the WLS regression differ from the standard errors of the second OLS regression, since we clustered them. We can see that the coefficient of the interaction term is highest in the WLS regression, and the three stars *** indicate that the coefficient is highly significant on the 1%-level. Our goal was to show if differences in attitudes towards a market economy between younger and older cohorts are higher in the East than in the West. Since the coefficient of the interaction term is with $0.027$ positive, the hypothesis is true. There are differences in attitudes towards a market economy, based on the year of birth and these are bigger in the East than in the West. Younger respondents from the East rather support a market economy than older respondents, who lived longer under communism. Since the data is from 2010 and 2016, we can assume that these differences still exist today.  
After analyzing the government intervention into markets and how the EU-East and Non-EU East have been affected from a strong intervention, we will focus on the political freedom in the next task.

#< award "Linear Regression Master No. 1"
Congratulations! You computed many more linear regressions and learned among others the difference between a OLS and WLS regression.
#>

## Exercise 3 -- Political Freedom

The democracy as it exists for example in Germany, with multiple different parties in the government and the opportunity to elect parties from all political directions, is typical for a democracy with a high political freedom, as well as the separation of power (Sweet, 2003). Gibson (1993) defines political freedom as the opportunity to join political parties together with their fellows, communicate with each other and go after their political demands. This means that a liberal democracy, which most of the capitalist countries claim to be, requires unaffected opportunities for the whole society. In comparison to this definition of political freedom, communist regimes typically have a restricted democracy by establishing a one-party regime (Fuchs-Schündeln & Schündeln, 2020).

Since democracy seems to be so important regarding the political freedom, we are going to take a deeper look into this. Therefore we will analyze the **Index of Democratization** from the Center for Systemic Peace and compare the score from the West to the EU East and Non-EU East. Afterwards, we take a look at preferences for a democracy and analyze if there are differences in support for a democracy across different cohorts. We will do this by computing a estimation which is similar to a differences-in-differences estimation.

#< info "Democracy in Communism"

As Engels (1847/1925) states in the "Principles of Communism", a goal of communism is the abolition of private property. This can only be reached through a revolution of the proletariat, the working class. The revolution will establish a democratic constitution and thus the political rule of the proletariat. This democracy would be useless for the proletariat, if it would not be used as a means to enforce the attack on private property and secure the existence of the proletariat. Results out of the revolution are several restrictions and existing conditions.

Those restrictions and more about democracy in communism and communist theory in general, can be read in Engels (1847/1925) "Principles of Communism", which is also known as "Engels' Original Draft of the Communist Manifesto". 
#>

## Exercise 3.1 -- Democratization

We are going to have a look on the development of democracy after the fall of the iron curtain. The **Index of Democratization** is an indicator from the [Center for Systemic Peace](https://www.systemicpeace.org/inscrdata.html) which measures the democracy of institutionalized states. The index ranges from -10 to 10, whereas a -10 describes a total autocracy and a 10 a total democracy. According to Gurr and Marshall (2018), a institutionalized democracy is conceptualized from three essential and independent constituents. It needs institutions and processes through which citizens have the opportunity to talk and express about their preferences regarding leadership or alternative policies. Next is that there are institutionalized limits to the power by the executive. Last is that citizens have guaranteed civil liberties throughout their daily lives and in any act regarding political participation. Furthermore there are more means or manifestations of these general principles, like freedom of press or the rule of law (Gurr and Marshall, 2018).  

We will have a look on this index, prepare therefore the data first and end the task with a plot, which shows the development of democratization in the EU-East, Non-EU East and West from 1990 to 2018.

**Task 3.1.1**

We will use the data `JEP_Data_MacroFacts.rds` in this task. Load the data and assign it to the variable `datamacro`, use the command `readRDS()` for that purpose.

```{r "3_1_1"}
#< task_notest
# load the data set JEP_Data_MacroFacts.rds and assign it to the variable datamacro. The right command is readRDS("")
#>
datamacro <- readRDS("JEP_Data_MacroFacts.rds")
```

**Task 3.1.2** 

As a first step we create a new data set called `dataIDC`. Our main variable of interest is `Democracy`, which represents the index of democratization. We have to omit Bosnia and Herzegovina, because data is missing. Further on we take use of the `dplyr` package to calculate the average value for each country group and year, which we save in the variable `democ`. 

Fill in the missing part, which computes the average index of democratization. Use the `mean()` function on the variable `Democracy`.

```{r "3_1_2"}
#< fill_in
dataIDC <- datamacro %>%
  subset(., Country != "Bosnia and Herzegovina") %>%
  group_by(Year, Country_group) %>%
  summarize(Year,
            Country_group,
            index_democ = ___) %>%
  distinct()
#>
dataIDC <- datamacro %>%
  subset(., Country != "Bosnia and Herzegovina") %>%
  group_by(Year, Country_group) %>%
  summarize(Year,
            Country_group,
            index_democ = mean(Democracy)) %>%
  distinct()
```

We have data from the West and Non-EU East for the whole time series from 1990 to 2017. There is an aggregated score for Yugoslavia from 1990 to 2002, which Fuchs-Schündeln and Schündeln (2020) assigned to Kosovo, Serbia and Montenegro. For the EU East data is available from 1993 to 2017, but we omit the year 1999 since data for Croatia is missing in that year. The lowest value of the Index of Democratization in our data is zero and the highest is ten.

#< quiz "Minimum value of the Index of Democratization"

question: In 2017, the minimum value of the index of democratization has been 8. How many countries in our data set (30 countries in total) did receive this score?
sc:
    - 1
    - 3*
    - 5
    - 6
    - 9
    
success: The answer is correct! Only three countries have a score of 8, all the others have a score of 9 or 10. The countries are Kosovo from the Non-EU East, Latvia from the EU East and perhaps a bit surprising, Belgium from the West.
failure: Try again.

#> 
<br>
**Task 3.1.3**

To see whether there are still differences between the country groups or not, we will plot the data in this task. Since no country has a score lower than 8 in 2017, we can already assume that they converged quite well.  
We use the `ggplot2` package, plotting the variable `Year` on the x-axis and `index_democ` on the y-axis, furthermore we use `Country_group` to set the colours. Fill in the missing parts of the given code.

```{r "3_1_3", fig.width=7, fig.height=7}
#< fill_in
ggplot() +
  geom_line(data = dataIDC, aes(x=___, y=___, colour = ___), show.legend = FALSE) +
  geom_point(data = dataIDC, aes(x=___, y=___, colour = ___), show.legend = FALSE) +
  geom_text(aes(x=2018.5,y=9.78),label="West",colour="black",size=3) +
  geom_text(aes(x=2018.5,y=9.3),label="EU East",colour="black",size=3) +
  geom_text(aes(x=2018,y=8.3),label="Non-EU East",colour="black",size=3) +
  scale_color_manual(name = "", 
                    labels = c("EU East", "Non-EU East", "West"),
                    values = c("red", "orange", "blue")) +
  ylim(1,10) +
  ggtitle("Index of Democratization (Polity Score)") +
  ylab("Score from -10 to 10") +
  theme_minimal()
#>
ggplot() +
  geom_line(data = dataIDC, aes(x=Year, y=index_democ, colour = Country_group), show.legend = FALSE) +
  geom_point(data = dataIDC, aes(x=Year, y=index_democ, colour = Country_group), show.legend = FALSE) +
  geom_text(aes(x=2018.5,y=9.78),label="West",colour="black",size=3) +
  geom_text(aes(x=2018.5,y=9.3),label="EU East",colour="black",size=3) +
  geom_text(aes(x=2018,y=8.3),label="Non-EU East",colour="black",size=3) +
  scale_color_manual(name = "", 
                    labels = c("EU East", "Non-EU East", "West"),
                    values = c("red", "orange", "blue")) +
  ylim(1,10) +
  ggtitle("Index of Democratization (Polity Score)") +
  ylab("Score from -10 to 10") +
  theme_minimal()
```

Since 2006, no country group had an average score lower than 8.8. The initial score for the West in 1990 is 9.9, for the Non-EU East 1.8 and for the EU East in 1993 7.6. In 1993, there was a difference between the West and the EU East of 2.3 and between the West and the Non-EU East of 7.5. If we compare these values to the newest years where data is available, we have a difference between the West and the EU East of 0.4 and between the West and the Non-EU East of 1 in 2017. The EU East was already on a level near the West, but especially the Non-EU East made huge improvements to a more democratic regime and towards levels of the West.  
As we have seen, all three country groups have today solid democratic institutions, according to this indicator. In the next task we will analyze how the support for a democracy depends on the years people lived under communism.

#< award "The Democratization Award"
Well done! You can call yourself now an expert regarding the Index of Democratization.
#>

## Exercise 3.2 -- Preferences for Democracy

In this exercise, we want to analyze if communism lead to differences in attitudes towards political institutions, i.e. support for democracy. As stated in the introduction of the task, the parliamentary democracy, as it is part in a capitalist system, is not meant to be the same in a communist system. Hence people who lived a long time under communism and received a communist education could have different attitudes towards democracy, as people living their whole live in a parliamentary democracy. We documented in the last exercise that the East converged almost completely towards levels of the West in terms of the Index of Democratization and want to find out in this exercise if it gets broad public support. We are going to analyze preferences for democracy across cohorts by creating a plot in the first part of the exercise. The second part of the exercise consists of a regression analysis, which is similar to a difference-in-difference estimation. All of the analysis in this task is based on the data `datapref`. 

**Task 3.2.1** 

Load the data `JEP_Preferences_Data.rds` using the `readRDS()` command and assign it to the variable `datapref`.

```{r "3_2_1"}
datapref <- readRDS("JEP_Preferences_Data.rds")
```

The data set `datapref` contains all relevant variables for this task. You find a description of the main variable we are going to use in the info box below, the other variables get explained when we need them.

#< info "prefer_democracy"

The variable `prefer_democracy` of `datapref` describes attitudes towards democracy. The authors used data from the Life in Transition Survey (LITS) from 2010 and 2016 and coded the variable `prefer_democracy` based on the results. The Survey was carried out by the European Bank for Reconstruction and Development, in collaboration with the World Bank. It was conducted as a three times survey in 2006, 2010 and 2016, which resulted in Life in Transition Survey I, II and III. Since data regarding attitudes towards democracy for countries from the West is not available from the Life in Transition Survey I, the authors only considered the Life in Transition Survey II and III. Specifically, the variable `prefer_democracy` is based on the following question from the survey: "With which one of the following statements do you agree most?". If the respondent chose the answer "Democracy is preferable to any other form of political system" the variable was coded 1, if the respondent chose the answer "Under some circumstances, an authoritarian government may be preferable to a democratic one" or "For people like me, it does not matter whether a government is democratic or authoritarian", the variable was coded as 0. If the respondent chose the answer "Don't know", the variable was coded as missing. 

Source: Fuchs Schündeln & Schündeln (2020) and [Life in Transition Survey (LITS)](https://www.ebrd.com/what-we-do/economic-research-and-data/data/lits.html)

#>

**Task 3.2.2**

We create a new data set `data_democ` which is based on `datapref`. The survey years 2010 and 2016 are relevant, thus we filter those years and furthermore remove observations from Germany. We group by `countryg` which represents the country group and `cohort_numeric` which has a range from 1 to 4, 1 represents those born before 1945, 2 those born between 1945 and 1959, 3 those born between 1950 and 1974 and 4 those born after 1974. Furthermore we compute the average support for democracy for each group and cohort and save it in the variable `democ`. Therefore the function `weighted_mean` from the `TAM` package is used and the corresponding survey weights `weight_LITS`. The computed mean gets multiplied with 100 to get values in percent. Lastly we use the `distinct()` command to get unique entries and remove NAs with `na.omit()`.

Run the code to prepare the data.

```{r "3_2_2"}
#< task
data_democ <- datapref %>%
  filter(year == 2010 | year == 2016) %>%
  subset(., countryname != "Germany") %>%
  group_by(countryg, cohort_numeric) %>%
  summarize(cohort_numeric,
            countryg,
            democ = weighted_mean(prefer_democracy, weight_LITS)*100) %>%
  distinct() %>%
  na.omit()
#>
```

**Task 3.2.3**

We want to visualize the prepared data now with the `ggplot2` package. We plot the cohorts on the x-axis and replace the numbers with a correct description. The average support for democracy is on the y-axis. Additionally we add a legend which contains the name of the country groups and the color assigned.

Run the code and have a look on the plot.

```{r "3_2_3", fig.width=7, fig.height=7}
#< task
ggplot() +
  geom_line(data=data_democ, aes(x=cohort_numeric, y=democ, colour = countryg)) +
  geom_point(data=data_democ, aes(x=cohort_numeric, y=democ, colour = countryg)) +
  scale_color_manual(name = "", 
                    labels = c("EU East", "Non-EU East", "West"),
                    values = c("red", "orange", "blue")) +
  ylim(19,100) +
  ggtitle("Support for democracy") +
  ylab("Respondents\nsupportive (percent)") + 
  scale_x_continuous(breaks = c(1,2,3,4),
                     labels = c("Born \nbefore 1945","Born \n1945 - 1959","Born \n1960 - 1974","Born \nafter 1974")) + 
  xlab("") +
  theme_minimal() +
  theme(legend.direction = "horizontal", legend.position = "bottom", legend.background = element_rect(fill = "white", colour = "gray30")) +
  guides(colour=guide_legend(keywidth = 3, keyheight = 1))
#>
```

Initially we see that the average support for democracy of the West is higher across all cohorts than in the EU East and Non-EU East. The average support in the West is 74% and thus 26 percentage points higher than in the EU East (average of 48%) and 22 percentage points higher than the average in the Non-EU East (average of 52%). However, we can see the younger the cohort in the EU East and Non-EU East gets, the higher the support for democracy is. In the oldest cohort, the average support is 40% in the EU East and 43% in the Non-EU East. In the youngest cohort, the average support is 54% in the EU East and 60% in the Non-EU East. We do not see the same development of preferences across cohorts in the West. The average support of the oldest cohort is 75%, while the average support of the youngest cohort is 71%. The cohort with the highest support for democracy is with 76% the cohort with respondents born between 1945 and 1959. We can assume that there is a causal effect of living under communism regarding support for preferences, due to the development of attitudes towards democracy in the EU East and Non-EU East. However, we will support this assumption with a regression analysis in the following.

#< award "Preferences for Democracy"
Congratulations! You got introduced into preferences for democracy and are now ready to go further on.
#>

### Regression Analysis

We are going to compute a linear regression, which is similar to a difference-in-difference estimation. Since the model is very similar to the model built in **Exercise 2.4** I will not go as much in depth of the structure as I did in that exercise.   
The goal of the analysis is to see whether there are differences in attitudes towards democracy, based on the year of birth of a respondent. Specifically, we want to find out if the difference in preferences between young and old is larger in the East than in the West. We regress attitudes towards democracy on an interaction term of a dummy variable `East2` and `birthyear10`, furthermore we control for country-year fixed effects and the year of birth of the respondent. The variable regarding the year of birth is divided by 10 to reduce the number of digits to get displayed. Thus the interpretation of coefficients containing year of birth show effects of a change by a decade and not by one year. Additionally we add dummy variables if the respondent is male and if the respondent was unemployed at the time the survey was taken, into the linear model. Furthermore we do not distinguish between EU East and Non-EU East anymore.   
If the coefficient of the interaction term is positive, the differences in preferences between younger and older people are larger in the East than in the West.

**Task 3.2.4**

First we need to prepare the data for the regression. We exclude Germany and remove all rows of which one of the relevant variables is NA. The data gets stored in `datareg2` and is based on `datapref`. You need to enter the correct commands to exclude Germany and to remove the rows containing NA. If you are not sure, have a look back at Exercise 2.4.

```{r "3_2_4"}
#< fill_in
datareg2 <- datapref %>%
  ___(countryname != "Germany") %>%
  ___(prefer_democracy, birthyear10, East2_birthyr10, male, unemployed_All, countryyear, countryname, weight_LITS)
#>
datareg2 <- datapref %>%
  filter(countryname != "Germany") %>%
  drop_na(prefer_democracy, birthyear10, East2_birthyr10, male, unemployed_All, countryyear, countryname, weight_LITS)

#< hint
display("That is not correct. The correct commands are 'filter()' and 'drop_na()'.")
#>
```

**Task 3.2.5**

After preparing the data, we want to compute the regression. We compute a ordinary least squared (OLS) linear regression, `prefer_democracy` as dependent variable and the interaction term `East2_birthyr10`, `birthyear10`, `male` and `unemployed_All` as independent variables. Furthermore we control for `countryyear` fixed effects and use `datareg2` as data. This gets done by taking use of the `felm()` function to compute the linear model. 

The names of the variables for the dependent and the independent variables are missing in the regression. Fill in the missing pieces as described above and continue with the next task to display the regression results.

```{r "3_2_5"}
#< fill_in
reg2_1 <- felm(___ ~ ___ + ___ + ___ + ___ | countryyear | 0 | 0 , data = datareg2)
#>
reg2_1 <- felm(prefer_democracy ~ East2_birthyr10 + birthyear10 + male + unemployed_All | countryyear | 0 | 0 , data = datareg2)
```

**Task 3.2.6**

We display the results of the regression with the `stargazer` package. Run the chunk and have a look on the regression table.

```{r "3_2_6", results='asis'}
#< task
stargazer(reg2_1,
          type = "html",
          title = "Regression Results",
          dep.var.labels = "Support for Democracy (%)",
          column.labels = c("OLS"),
          covariate.labels = c("EastxBirthYear<sup>-10<sup>", "BirthYear<sup>-10<sup>", "Male", "Unemployed"),
          keep.stat = c("rsq", "n"),
          add.lines=list(c('CountryxYear fixed effects', 'Yes')))
#>
```

<br>
The coefficient of the interaction term is positive. This is in line with our hypothesis that communism affected preferences and that differences in preferences between young and old are larger in the East than in the West. However, there is again a big chance that we have heteroskedasticity, to be sure we will perform a Breusch-Pagan test.

**Task 3.2.7**

A Breusch-Pagan test gets done by using the command `bptest()` from the `lmtest` package. 

Type the command `bptest()` and inside the parentheses the name from the linear model we want to test for heteroskedasticity.

```{r "3_2_7"}
bptest(reg2_1)
```

The p-value is lower than a common significance level of 5%, which results in heteroskedasticity for the linear model. We can counteract this by performing a weighted least squared (WLS) regression. Furthermore, we cluster the standard errors by `countryname` to get cluster robust standard errors, since we can assume that our data consists of several clusters on country level. 

**Task 3.2.8**

We perform the weighted least squared (WLS) regression with the `felm()` function, by adding the weights argument. We use the survey weights `weight_LITS` and compute cluster robust standard errors on country level. The code for the regression is there, run the code and continue with the next task.

```{r "3_2_8"}
#< task
reg2_2 <- felm(prefer_democracy ~ East2_birthyr10 + birthyear10 + male + unemployed_All | countryyear | 0 | countryname , data = datareg2, weights = datareg2$weight_LITS)
#>
```

**Task 3.2.9**

After computing the OLS and WLS regression, we want to display them both. Add the names of the linear models in the `stargazer()` command and run the chunk.

```{r "3_2_9", results='asis'}
#< fill_in
stargazer(___,
          ___,
          type = "html",
          title = "Regression Results",
          dep.var.labels = "Support for Democracy (%)",
          column.labels = c("OLS", "WLS"),
          covariate.labels = c("EastxBirthYear<sup>-10<sup>", "BirthYear<sup>-10<sup>", "Male", "Unemployed"),
          keep.stat = c("rsq", "n"),
          add.lines=list(c('CountryxYear fixed effects', 'Yes','Yes')))
#>
stargazer(reg2_1,
          reg2_2,
          type = "html",
          title = "Regression Results",
          dep.var.labels = "Support for Democracy (%)",
          column.labels = c("OLS", "WLS"),
          covariate.labels = c("EastxBirthYear<sup>-10<sup>", "BirthYear<sup>-10<sup>", "Male", "Unemployed"),
          keep.stat = c("rsq", "n"),
          add.lines=list(c('CountryxYear fixed effects', 'Yes','Yes')))
```

<br>
The coefficient of the interaction term is the same in both regressions. As we expected, it is positive. This means that differences in preferences towards democracy are larger in the East than in the West across birth cohorts. Furthermore it means that communism affects preferences towards democracy and it affects preferences to the effect that living longer under communism causally leads to less support for democracy, than living a shorter time under communism. The coefficient of the interaction term is highly significant on the 1%-level, indicated by the three stars ***. 

As we have seen, there are still differences in attitudes towards democracy in the East and West and since the surveys are not very old, these differences probably still exist today. Especially older people tend to have differences compared to levels of the West.   
The focus of the next two tasks is on inequality, therefore we will analyze measures of the welfare state and redistribution in the next task.

#< award "Linear Regression Master No. 2"
Congratulations! You solved the second exercise and are now familiar with the effects of communism regarding preferences for democracy.
#>

## Exercise 4 -- Income Distribution

As a third aspect in which a communist and capitalist system fundamentally differ, we define the distribution of income. Equality in economic conditions is a declared objective of communism. A classical means to reduce income inequality is redistribution through progressive taxation or welfare transfer programs by the government. However, in the Eastern European countries they tried to achieve equality more through direct wages and price regulations (Fuchs-Schündeln & Schündeln, 2020).

We will have a look on the development of income inequality in this exercise we analyze the **average social expenditure share relative to the GDP** and the **ratio of the average income tax rate** in the first task and later have a look on preferences regarding redistribution.

#< info "Distribution of income in communism"

In the Communist Manifesto, Marx and Engels (1848) summarize the theory of communism as the abolition of private bourgeois property. In a communist society, everyone works as much as they can and everybody receives as much as they need. Marx (1847/1955) claims that workers do not get paid equally according to their amount of work. They work and receive a wage, which does not equal the work. The leftover surplus value is taken by the capitalists, as Marx (1955) law of value in "The poverty of philosophy" says. When Marx says value, he means the ratio between goods and human labor, the value relationship. Since in communism everyone works as much as they can and receive as much as they need, there is no need for the distribution of money since wealth is distributed equally.

See the "Communist Manifesto" from Marx & Engels (1848) and Marx (1847/1955) "The poverty of philosophy" for detailed information, especially regarding the law of value. It is an important part in understanding the philosophy of Marx and Engels.

#>

## Exercise 4.1 -- Measures of the Welfare State

A high income inequality means, that a high share of the overall income goes to only a small group of the population. Since data is mostly not available for the Non-EU East, we focus only on the EU-East and West in this task.  
To get a feeling of the inequality between EU East and West, we start with two quizzes, regarding income inequality in the years 1990 and 2006. A good measure of income inequality is the pre-tax income share which belongs to the top 10 percent income earners. The data therefore is based on the World Inequality Database, data for Poland is not available. 

#< quiz "Income inequality in 1990"

question: What was the share of pretax income that went to the top 10 percent in the West in 1990?
sc:
    - 47%
    - 12% 
    - 27%*
    - 32%
    
success: The answer is correct! The share of pre-tax income going to the top 10 percent was 27% in the West, in 1990. For comparison, in the EU East it was less than 23% (Fuchs-Schündeln & Schündeln, 2020).
failure: Try again.

#> 

<br>
#< quiz "Income inequality in 2006"

question: What was the share of pretax income that went to the top 10 percent in the East in 2006?
sc:
    - 29%*
    - 19% 
    - 35%
    - 23%
    
success: The answer is correct! The share of pre-tax income going to the top 10 percent was 29% in the East, in 2006. This is the same share as it was in the West, the EU East converged to levels of the West regarding this measure (Fuchs-Schündeln & Schündeln, 2020).
failure: Try again.

#> 
 
<br>

#< award "Income Inequality Quizmaster"
Well done!
#>

**Task 4.1.1**

We will use the data `JEP_Data_MacroFacts.rds` in this task. Run the chunk to load the data assigned to the variable `datamacro`.

```{r "4_1_1"}
#< task
datamacro <- readRDS("JEP_Data_MacroFacts.rds")
#>
```

**Task 4.1.2**

Our main variables of interest are `SocialExp` and `TaxProgressivity_2`. Data from both variables is from the Organisation for Economic Co-operation and Development (OECD), unfortunately there is no data for the Non-EU East available.  
`SocialExp` represents the share of social expenditures from 1990 to 2018. The OECD created the [Social Expenditure Database (SOCX)](https://www.oecd.org/social/expenditure.htm) for the purpose of getting an indicator of social policy. It contains statistics on private and public social expenditure and indicators for net social spending, for 37 OECD countries.  
The variable `TaxProgressivity_2` is made from the [average personal income tax and social security contribution rates on gross labour income](https://stats.oecd.org/Index.aspx?DataSetCode=TABLE_I5). Since this data is from the OECD too, it is only available for OECD countries. To get the progressivity of tax, the average income tax rate at 167 percent of average earnings is set into relation to the tax rate of average earnings. Only tax rates for a single person without children are taken into consideration. 

We start with preparing the data, for that purpose we create a new data set which we name `dataRED`. It is based on the initial data `datamacro`. Next we remove all observations from the Non-EU East, Bulgaria, Croatia and Romania since there is no data. We group after `Year` and `Country_group` and compute the average of our variables of interest. This means we create two new variables which we assign the names `socialexp` and `taxp`. Lastly we use the `distinct()` command to have only unique rows in the data.

Fill in the missing pieces of the code in the `summarize()` command. Create the variables `socialexp` and `taxp`, which get calculated as the mean of `SocialExp` and `TaxProgressivity_2`.

```{r "4_1_2"}
#< fill_in
dataRED <- datamacro %>%
  subset(., Country_group != "Non-EU East" & Country != "Bulgaria" & Country != "Croatia" & Country != "Romania") %>%
  group_by(Year, Country_group) %>%
  summarize(Year,
            Country_group,
            ___,
            ___) %>%
  distinct()
#>
dataRED <- datamacro %>%
  subset(., Country_group != "Non-EU East" & Country != "Bulgaria" & Country != "Croatia" & Country != "Romania") %>%
  group_by(Year, Country_group) %>%
  summarize(Year,
            Country_group,
            socialexp = mean(SocialExp),
            taxp = mean(TaxProgressivity_2)) %>%
  distinct()
```

**Task 4.1.3**

We will create two plots, showing the social expenditure share and tax progressivity, with the `ggplot2` package in this task. Other than in earlier tasks, we save these plots in two separate variables. Therefore we create `socialexp_plot` containing the plot about social expenditure and `taxp_plot` containing the plot about tax progressivity. Saving them in variables has the advantage that we can plot them next to each other in the next task. We plot the year on the x-axis and `socialexp` in the first plot and `taxp` in the second plot on the y-axis.

Fill in the missing names of the variables for the data, x- and y-values and run the chunk.

```{r "4_1_3"}
#< fill_in
socialexp_plot <- ggplot() +
  geom_line(data = ___, aes(x=___, y=___, colour = Country_group), show.legend = FALSE) +
  geom_point(data = data_welfare, aes(x=Year, y=socialexp, colour = Country_group), show.legend = FALSE) +
  geom_text(aes(x=2017,y=23.9),label="West",colour="black",size=3) +
  geom_text(aes(x=2017,y=18),label="EU East",colour="black",size=3) +
  scale_color_manual(name = "", 
                    labels = c("EU East", "West"),
                    values = c("red", "blue")) +
  ylim(15.8,27) +
  ylab("Percent of GDP") +
  ggtitle("A: Social expenditure Share") +
  theme_minimal()

taxp_plot <- ggplot() +
  geom_line(data = ___, aes(x=___, y=___, colour = Country_group), show.legend = FALSE) +
  geom_point(data = data_welfare, aes(x=Year, y=taxp, colour = Country_group), show.legend = FALSE) +
  geom_text(aes(x=2017,y=1.43),label="West",colour="black",size=3) +
  geom_text(aes(x=2016,y=1.22),label="EU East",colour="black",size=3) +
  scale_color_manual(name = "", 
                    labels = c("EU East", "West"),
                    values = c("red", "blue")) +
  ylim(1,1.6) +
  ylab("Ratio of tax rate high to average earners") +
  ggtitle("B: Tax progressivity") +
  theme_minimal()
#>
socialexp_plot <- ggplot() +
  geom_line(data = dataRED, aes(x=Year, y=socialexp, colour = Country_group), show.legend = FALSE) +
  geom_point(data = dataRED, aes(x=Year, y=socialexp, colour = Country_group), show.legend = FALSE) +
  geom_text(aes(x=2017,y=23.9),label="West",colour="black",size=3) +
  geom_text(aes(x=2017,y=18),label="EU East",colour="black",size=3) +
  scale_color_manual(name = "", 
                    labels = c("EU East", "West"),
                    values = c("red", "blue")) +
  ylim(15.8,27) +
  ylab("Percent of GDP") +
  ggtitle("A: Social expenditure Share") +
  theme_minimal()

taxp_plot <- ggplot() +
  geom_line(data = dataRED, aes(x=Year, y=taxp, colour = Country_group), show.legend = FALSE) +
  geom_point(data = dataRED, aes(x=Year, y=taxp, colour = Country_group), show.legend = FALSE) +
  geom_text(aes(x=2017,y=1.43),label="West",colour="black",size=3) +
  geom_text(aes(x=2016,y=1.22),label="EU East",colour="black",size=3) +
  scale_color_manual(name = "", 
                    labels = c("EU East", "West"),
                    values = c("red", "blue")) +
  ylim(1,1.6) +
  ylab("Ratio of tax rate high to average earners") +
  ggtitle("B: Tax progressivity") +
  theme_minimal()
```

**Task 4.1.4**

We want to combine the two plots `socialexp_plot` and `taxp_plot` to one plot in this task. For this, the `patchwork` package provides a variety of ways to arrange plots created with `ggplot()`.

#< info "The patchwork package"

The `patchwork` package is specifically made to combine and arrange ggplots in one graphic. Usage is very simple, you have to save the specific plots in separate variables and add them later together connecting each plot with an addition symbol.  
There are plenty of options in arranging the plots, you can also adjust the height and the width of each plot, how many plots in one row and much more. Furthermore there is the possibility to add titles, subtitles and captions to the plot.

See https://patchwork.data-imaginist.com for more information about the `patchwork` package.

#>

First of all we need to load the `patchwork` package with the `library()` command. Afterwards we add the two plots and add a title to the plot with the `plot_annotation()` command. Lastly we adjust the size of the title. The code is there, run the chunk and have a look on the plot.

```{r "4_1_4", fig.width=10, fig.height=7}
#< task
library(patchwork)
socialexp_plot + taxp_plot + plot_annotation(
  title = "Measures of the Welfare State and Redistribution",
  theme = theme(plot.title = element_text(size = 18))
)
#>
```

At first glance we see that social expenditure, as well as tax progressivity is apparently lower in the East than in the West. Given that we defined economic equality as an objective of communism, this result may be a bit surprising. As stated above, this could be due to direct wages and price regulations in the East. Hence it could be the case that social expenditures in the East were lower than in the West, because they did not need those means of redistribution to tackle the inequality. In 1990, the only countries from the East where data is available are Poland and the Czech Republic. Both countries have a share of social expenditure to the GDP of 14%, so even lower than the averages in the last 20 years (Fuchs-Schündeln & Schündeln, 2020). As Fuchs-Schündeln & Schündeln (2020) have elaborated, due to slightly lower pre-tax inequality in the East, but less redistribution measures, it suggests a similar or even lower post-tax inequality in the East than in the West. They used data from the EU Statistics of Income and Living Conditions (EU-SILC), which provides estimates of post-tax income inequality. The result is that the EU East and West are almost on the same level and the Non-EU East is even slightly above the West (Fuchs-Schündeln & Schündeln, 2020).  
We stated in the introduction that most of the countries we call communist rather have seen themselves as socialist countries. As Novokmet (2021) says, under socialism it is not obvious that the income gets more equally distributed. To expect that there is no inequality in socialist countries is misleading.

Let us see how the broad opinion of the public on redistribution is, by analyzing preferences for redistribution in the next task.

#< award "The Welfare State Award"
Well done! You can call yourself now an expert regarding measurements of the welfare state.
#>

## Exercise 4.2 -- Preferences for Redistribution

As we have seen in the quizzes at the beginning of the last exercise, income inequality in the East has converged to levels of the West. However, we have seen different results in social expenditure and in tax progressivity as we expected throughout the last exercise, with the East being on levels below the West. Nevertheless as we discussed, these indicators do not tell us too much about the development of inequality in the East, since redistribution was not carried out through those classical means, like welfare transfers or tax progressivity. 

The focus in this exercise is on preferences regarding redistribution. We want to analyze if communism lead to differences in attitudes towards income inequality and if these potential differences are still there. The achievement of equality is a desired goal of communism. Given that, we expect a higher support for policies promoting economic equality in the East, although we observed less policies for redistribution in the last task. Alesina & Fuchs-Schündeln (2007) argue that a reason for different preferences between East and West Europe could be due to cultural differences. This means that people from Eastern Europe could favor redistribution in general more than people from Western Europe, even before the implementation of a communist regime. We therefore analyze two different modules from 2009 and 2016 and focus on the comparison between cohorts. With that approach we try to minimize these potential differences.  

First of all we are going to create a plot, for the purpose of displaying the support for redistribution across cohorts. We take therefore two different modules form the International Social Survey Programme (ISSP), which Fuchs-Schündeln & Schündeln (2020) evaluated and included into the data set `JEP_Preferences_Data.rds`. We start with importing the data.

**Task 4.2.1** 

Run the chunk to load the data `JEP_Preferences_Data.rds` which we assign to `datapref`.

```{r "4_2_1"}
#< task
datapref <- readRDS("JEP_Preferences_Data.rds")
#>
```

The authors evaluated the [ISSP Social Inequality module](https://www.gesis.org/en/issp/modules/issp-modules-by-topic/social-inequality) from 2009, as well as the [ISSP Role of Government module](https://www.gesis.org/en/issp/modules/issp-modules-by-topic/role-of-government) from 2016. Unfortunately there is no information from the ISSP for countries from the Non-EU East.  
See the info boxes below to get detailed information about the variables that have emerged from it. 

#< info "govreduceinequality_socineq & govreduceineqBinary_socineq"

The variables `govreduceinequality_socineq`and `govreduceineqBinary_socineq` have emerged from the evaluation of the ISSP Social Inequality module IV from 2009 by Fuchs-Schündeln & Schündeln (2020). This survey addresses the issues of attitudes towards inequality, views on earnings and incomes and a lot more information regarding inequality and social positions. There is information available for all EU East countries except Romania and for all West countries except Greece, Ireland, Luxembourg and the Netherlands. Specifically the authors used the question "To what extent do you agree or disagree with the statement, 'It is the responsibility of the government to reduce the differences in income between people with high incomes and those with low incomes'?". There have been five answer possibilities, namely "strongly agree", "agree", "neither agree nor disagree", "disagree" and "strongly disagree". Based on these answers the authors created the variable `govreduceinequality_socineq` which has a range from 0 to 4 and represents the answers. A higher value represents a stronger agreement of the statement. Furthermore they created the variable `govreduceineqBinary_socineq` which is a indicator variable. It is 1, which represents support for redistribution, if the respondent chose "strongly agree" or "agree", otherwise it is 0.

Source: Fuchs-Schündeln & Schündeln (2020) and  [ISSP 2009 Social Inequality module IV](https://www.gesis.org/en/issp/modules/issp-modules-by-topic/social-inequality/2009)

#>

<br>
#< info "govreduceinequality_roleofgov & govreduceineqBinary_roleofgov"

The variables `govreduceinequality_roleofgov` and `govreduceineqBinary_roleofgov` are based on the ISSP Role of Government module V from 2016. The survey is about issues regarding intervention of the government and attitudes towards government responsibilities. There are a few countries missing in the East, namely Poland which is the largest country from the EU East, as well as Bulgaria, Estonia and Romania. In the West Austria, Greece, Ireland, Italy, Luxembourg, the Netherlands and Portugal are missing. Fuchs-Schündeln & Schündeln (2020) evaluated the question: "On the whole, do you think it should or should not be the government's responsibility to reduce income differences between the rich and the poor?". The answer possibilities are "Definitely should be", "Probably should be", "Probably should not be", "Definitely should not be" and "Can't choose". Based on these answers, the authors defined the variable `govreduceinequality_roleofgov` which has a range from 0 to 3, whereas 3 represents "Definitely should be" and 0 "Definitely should not be". If the respondent chose "Can't choose" the authors defined it as missing. Furthermore they generated the variable `govreduceineqBinary_roleofgov` which is a indicator variable. It is 1 if the respondent chose either "Definitely should be" or "Probably should be" and 0 if the respondent chose "Definitely should not be" or "Probably should not be".

Source: Fuchs-Schündeln & Schündeln (2020) and [ISSP 2016 Role of Government V](https://www.gesis.org/en/issp/modules/issp-modules-by-topic/role-of-government/2016)


#>

**Task 4.2.2**

Given that we do not have information about the Non-EU East, we use the variable `east_west` to distinguish between EU East and West. Furthermore we have the variable `cohort_numeric` which indicates the cohort the respondent is in. We create a new data set `data_welfare`, based on `datapref`. We filter the relevant years 2009 and 2016 the survey results are from and remove Germany. Furthermore we group by `east_west` and `cohort_numeric`. Next we create two variables `redistr_socineq` and `redistr_roleofgov` which represent the average of the dummy variables from the Social Inequality and Role of Government module. They get calculated as a weighted mean, using `weighted_mean` from the `TAM` package and the survey weights `weight_ISSP`. Lastly we use `distinct()` to get unique values and `na.omit()` to remove rows containing NAs.

Fill in the missing pieces for the `group_by` command and run the chunk.

```{r "4_2_2"}
#< fill_in
data_welfare <- datapref %>%
  filter(year == 2009 | year == 2016) %>%
  subset(., countryname != "Germany") %>%
  group_by(___, ___) %>%
  summarize(east_west,
            cohort_numeric,
            redistr_socineq = weighted_mean(govreduceineqBinary_socineq, weight_ISSP)*100,
            redistr_roleofgov = weighted_mean(govreduceineqBinary_roleofgov, weight_ISSP)*100) %>%
  distinct() %>%
  na.omit()
#>
data_welfare <- datapref %>%
  filter(year == 2009 | year == 2016) %>%
  subset(., countryname != "Germany") %>%
  group_by(east_west, cohort_numeric) %>%
  summarize(east_west,
            cohort_numeric,
            redistr_socineq = weighted_mean(govreduceineqBinary_socineq, weight_ISSP)*100,
            redistr_roleofgov = weighted_mean(govreduceineqBinary_roleofgov, weight_ISSP)*100) %>%
  distinct() %>%
  na.omit()
```

#< quiz "Highest support for redistribution"

question: Which cohort do you think has the highest support for redistribution, according to the Social Inequality module IV?
sc:
    - EU East, <1945*
    - West, 1945-1959
    - EU East, 1945-1959
    - West, 1960-1974
    - EU East, >1974
    - West, >1974
    
success: The answer is correct! The highest support for redistribution comes from the oldest cohort in the EU East with 87.7%. 
failure: Try again.

#> 

<br>
**Task 4.2.3**

As a next step we are going to plot the support for redistribution for the ISSP Social Inequality module IV, as well as the ISSP Role of Government module V, across the four cohorts. We use the data from the Social Inequality module as baseline and plot it as a solid line, since there are more countries available. The data from the Role of Government module are we going to plot as a dashed line. Therefore we add the argument `linetype = "dashed"` in the corresponding command creating the line. We plot the cohorts on the x-axis and the means of support on the y-axis.

Run the chunk and have a look on the plot.

```{r "4_2_3", fig.width=7, fig.height=7}
#< task
ggplot() +
  geom_line(data=data_welfare, aes(x=cohort_numeric, y=redistr_socineq, colour = east_west)) +
  geom_point(data=data_welfare, aes(x=cohort_numeric, y=redistr_socineq, colour = east_west)) +
  geom_line(data=data_welfare, aes(x=cohort_numeric, y=redistr_roleofgov, colour = east_west), linetype ="dashed") +
  geom_point(data=data_welfare, aes(x=cohort_numeric, y=redistr_roleofgov, colour = east_west)) +
  scale_color_manual(name = "", 
                    labels = c("EU East", "West"),
                    values = c("red", "blue")) +
  ylim(19,100) +
  ggtitle("Support for redistribution") +
  ylab("Respondents\nsupportive (percent)") +
  scale_x_continuous(breaks = c(1,2,3,4),
                     labels = c("Born \nbefore 1945","Born \n1945 - 1959","Born \n1960 - 1974","Born \nafter 1974")) + 
  xlab("") +
  theme_minimal() +
  theme(legend.direction = "horizontal", legend.position = "bottom", legend.key = element_blank(), 
        legend.background = element_rect(fill = "white", colour = "gray30")) +
  guides(colour=guide_legend(keywidth = 3, keyheight = 1),
          linetype=guide_legend(keywidth = 3, keyheight = 1))
#>
```

As expected, the average support for redistribution is higher across all cohorts in the EU East than in the West. This applies for data from the Social Inequality module as well as the Role of Government module. It is in contrast to the findings in the last exercise, which were that redistributive policies are weaker in the East than in the West. If we focus on the baseline, we can clearly observe a cohort pattern in the East. The oldest cohort has an average support of 88%, whereas it gets lower as younger the cohort is. The average support in the youngest cohort is 78%. This pattern can not be observed in the West. The least support for redistribution with 71% comes from the cohort with those born between 1960 and 1974. The difference to the cohort with the highest support, which is there the oldest cohort too, is only 5 percentage points. In the East the difference is 10 percentage points. Thus, we observe again that living longer under communism might affect preferences in the direction of the communist doctrine. If we compare the results of the baseline with the dashed line, we can observe a similar trend.

We will support the assumption, that communism affects preferences regarding redistribution, in the following.

#< award "Preferences for Redistribution"
Congratulations! You got introduced into preferences for redistribution and are now ready to analyze them more in detail.
#>

### Regression Analysis

We are going to compute several linear models in this part of the exercise. The models we will use are similar to a difference-in-difference estimation and since the structure is very similar to the model in **Exercise 2.4** I will not go as much in depth as in that task.  

Our goal is to analyze if the difference in preferences regarding redistribution is smaller in the East than in the West, based on the year of birth. This means that we are going to analyze if the difference in attitudes towards redistribution, based on the year of birth, between East and West is negative. The dependent variable in the linear regression describes attitudes towards redistribution. Specifically, we build two linear models, one is based on data from the Social Inequality module IV and the other is based on data from the Role of Government module V. We take the indices `govreduceinequality_socineq` and `govreduceinequality_roleofgov` into the regression, since those use the answer categories more than the dummy variables. The variables are results of a survey, which Fuchs-Schündeln & Schündeln (2020) transformed into numeric variables. Given that, the scale is difficult to interpret. We know that a index of 4 from the `govreduceinequality_socineq` is a higher support for redistribution as a 3, but we do not know how to interpret the difference. To tackle that issue, we have to standardize the variable. Standardizing means that the variable has a mean of 0 and a standard deviation of 1. Therefore we use the z-transformation, which is represented by the following equation.
$$
z = \frac{y-\mu}{\sigma}
$$
$y$ is the score of our variable, $\mu$ is the mean of the population and $\sigma$ is the standard deviation of the population. Standardizing the variables has the result, that we can not interpret the coefficients in the units of the variable anymore. We have to interpret it in standard deviation units, which makes the original scale irrelevant (Wooldridge, 2013).  

We build linear models similar to a difference-in-difference estimation with the standardized variables as dependent variables. We regress those attitudes towards redistribution on an interaction term of the dummy variable `East2` and `birthyear10`. Furthermore we add control variables for the year of birth divided by 10, whether the respondent is male and a control variable whether the respondent is unemployed. Additionally we control for country-year fixed effects. The focus is on the interaction term `East2_birthyr10`, if the coefficient is negative, the difference in preferences is smaller in the East than in the West.

We are going to prepare the data first, perform the standardization of our main variable and compute a linear regression afterwards.

**Task 4.2.4**

We focus on the Social Inequality module IV first and compare the results later with the Role of Government module V, therefore our variable of interest is `govreduceinequality_socineq`. We create a new data set which we name `datareg3_1` and it is based on `datapref`. Afterwards we remove data regarding Germany and remove rows containing NAs for all the relevant variables.  

Run the chunk to prepare the data.

```{r "4_2_4"}
#< task
datareg3_1 <- datapref %>%
  filter(countryname != "Germany") %>%
  drop_na(govreduceinequality_socineq, birthyear10, East2_birthyr10, male, unemployed_All, countryyear, countryname, weight_ISSP)
#>
```

**Task 4.2.5**

As a next step we standardize the variable. Therefore we create a new variable in the data set `datareg3_1` with the `mutate()` command from the `dplyr` package. We name the new variable `govreduceinequality_socineq_sd`, which represents the $z$ from the above equation and simply transform the other parts of the equation. It is important that we use weighted means and standard deviations, given that we have the survey weights. There are commands in base R like `scale()` and several packages to compute a standardization of variables. However, since we have the survey weights things get more complicated and the R functions do not work that well anymore, so it is easier to compute the standardization by hand.  
The equation we will compute is the following, 'sd' stands for 'standardized':
$$
govreduceinequality{\_}socineq{\_}sd = \frac{govreduceinequality{\_}socineq-\mu_{govreduceinequality{\_}socineq}}{\sigma_{govreduceinequality{\_}socineq}}
$$
The code is there, have a look at it and run the chunk.
```{r "4_2_5"}
#< task
datareg3_1 <- datareg3_1 %>%
  mutate(govreduceinequality_socineq_sd = (govreduceinequality_socineq - weighted_mean(govreduceinequality_socineq,weight_ISSP)) / weighted_sd(govreduceinequality_socineq,weight_ISSP))
#>
```

**Task 4.2.6**

After preparing the data, we are going to compute a linear regression. Since we already know that our data may have a clustered structure and thus we need to consider heteroskedasticity, we compute directly a weighted least squared (WLS) regression using the `felm()` command and cluster the standard errors on country level. We use `govreduceinequality_socineq_sd` as dependent variable, `East2_birthyr10`, `birthyear10`, `male` and `unemployed_All` as independent variable, control for `countryyear` fixed effects and use `weight_ISSP` as weights.

Fill in the command for the regression and the name of the dependent variable.

```{r "4_2_6"}
#< fill_in
reg3_1 <- ___(___ ~ East2_birthyr10 + birthyear10 + male + unemployed_All | countryyear | 0 | countryname, data = datareg3_1, weight = datareg3_1$weight_ISSP)
#>
reg3_1 <- felm(govreduceinequality_socineq_sd ~ East2_birthyr10 + birthyear10 + male + unemployed_All | countryyear | 0 | countryname, data = datareg3_1, weight = datareg3_1$weight_ISSP)
```

**Task 4.2.7**

Run the chunk below to display the regression results with `stargazer()`.

```{r "4_2_7", results='asis'}
#< task
stargazer(reg3_1,
          type = "html",
          title = "Regression Results",
          dep.var.labels = c("Support for Redistribution <br>(social ineq. module)"),
          column.labels = c("WLS"),
          covariate.labels = c("EastxBirthYear<sup>-10<sup>", "BirthYear<sup>-10<sup>", "Male", "Unemployed"),
          keep.stat = c("rsq", "n"),
          add.lines=list(c('CountryxYear fixed effects', 'Yes')))
#>
```

<br>
The result is in line with our assumption that communism affects preferences. The sign of the interaction term is negative and the coefficient is highly significant, indicated by the three ***. Thus the difference in attitudes towards redistribution is smaller in the East than in the West, between young and old. This means that living a longer time under communism affects preferences regarding redistribution, in the direction of the communist doctrine. In our case, the longer one lived under a communist regime, the higher is the support for redistribution.  
We will compute a second regression about attitudes towards redistribution in the next task, considering data from the Role of Government module V, to see if we can observe similar results. 

**Task 4.2.8**

We need to prepare a new data set first of all, which we name `datareg3_2`. The code is the same as we have done it before, but we replace the variable name from the Social Inequality module IV with the variable name `govreduceinequality_roleofgov` from the Role of Government module V.

Run the chunk to prepare the data.
```{r "4_2_8"}
#< task
datareg3_2 <- datapref %>%
  filter(countryname != "Germany") %>%
  drop_na(govreduceinequality_roleofgov, birthyear10, East2_birthyr10, male, unemployed_All, countryyear, countryname, weight_ISSP)
#>
```

**Task 4.2.9**

As a next step we are going to standardize the variable, by transforming the following equation into R code:
$$
govreduceinequality{\_}roleofgov{\_}sd = \frac{govreduceinequality{\_}roleofgov-\mu_{govreduceinequality{\_}roleofgov}}{\sigma_{govreduceinequality{\_}roleofgov}}
$$
The code for the calculation of the standardization is missing, if you are not sure, have a look back at **Task 4.2.5**. Do not forget to calculate the weighted mean and standard deviation and to set the parentheses correctly.

```{r "4_2_9"}
#< fill_in
datareg3_2 <- datareg3_2 %>%
  mutate(govreduceinequality_roleofgov_sd = (___)
#>
datareg3_2 <- datareg3_2 %>%
  mutate(govreduceinequality_roleofgov_sd = (govreduceinequality_roleofgov - weighted_mean(govreduceinequality_roleofgov,weight_ISSP)) / weighted_sd(govreduceinequality_roleofgov,weight_ISSP))
```

**Task 4.2.10**

We compute a weighted least squared (WLS) regression in this task, which we save in the variable `reg3_2`. The dependent variable is `govreduceinequality_roleofgov_sd` and we add several control variables as stated in **Task 4.2.6**. We cluster the standard errors on country level and use `weight_ISSP` as weights.  

Run the chunk to compute the regression.

```{r "4_2_10"}
#< task
reg3_2 <- felm(govreduceinequality_roleofgov_sd ~ East2_birthyr10 + birthyear10 + male + unemployed_All | countryyear | 0 | countryname, data = datareg3_2, weight = datareg3_2$weight_ISSP)
#>
```

**Task 4.2.11**

We will show the results of both regressions now, using the `stargazer()` function. Run the chunk and have a look at the regression results.

<style>
#mytab td {
padding-left: 3em;
}
</style>
<div id = 'mytab'>
```{r "4_2_11", results='asis'}
#< task
stargazer(reg3_1,
          reg3_2,
          type = "html",
          title = "Regression Results",
          dep.var.labels = c("Support for Redistribution <br>(social ineq. module)", "Support for Redistribution <br>(role of gov. module)"),
          column.labels = c("WLS", "WLS"),
          covariate.labels = c("EastxBirthYear<sup>-10<sup>", "BirthYear<sup>-10<sup>", "Male", "Unemployed"),
          keep.stat = c("rsq", "n"),
          add.lines=list(c('CountryxYear fixed effects', 'Yes','Yes')))
#>
```
</div>

<br>
As you can see, the sign of the interaction term in the regression regarding the Role of Government V module is negative too, although the coefficient is way closer to being 0 than the one in the first regression. Moreover, the coefficient is not significant at all. Both coefficients indicate that the difference in attitudes towards redistribution is smaller in the East than in the West between young and old. The reason why the coefficients differ could be, that the data from the Social Inequality module is from 2009 and data from the Role of Government module is more current from 2016. However, we can say that communism affects preferences regarding redistribution and given that the coefficient is still negative in the 2016 data, we can say that these effects are long lasting. 
In the last exercise we want to analyze the development of gender inequality in the East and West, and how preferences regarding gender equality differ between young and old.

#< award "Linear Regression Master No. 3"
Good job! You analyzed attitudes towards redistribution based on the social inequality and role of government module.
#>

## Exercise 5 -- Gender Inequality

As a fourth aspect of our Analysis, we will analyze gender inequality in the East and compare it to the West. As Engels (1884) says in his anthropological book, he does not see a hierarchy between gender or a specific domination. For him, as well as Marx, men and women have been neutral subjects. Thus, gender equality in labour market is defined as a featured goal of communism, which the Eastern European states made efforts to promote (Fuchs-Schündeln & Schündeln, 2020). Specifically, they promoted the inclusion of women into the economy and the economic independence of women. Given the plan for economic growth of those states, which was based on an intensive use of labour, the inclusion of women was necessary. They even introduced new laws, education and policies to include women more into the workforce (Campa & Sereafinelli, 2019). 

We will analyze the effect of those policies in the following, focusing on the development of gender equality in the labor market in the first exercise. The focus there is on the **labor force participation of men and women** and the **hours worked per employed**. In the second exercise we will analyze preferences regarding gender equality.

## Exercise 5.1 -- Gender Equality in Labor Market

We are going to analyze the development of gender equality, with the focus on the labor market, in this exercise. Therefore we consider two indicators which give us insights about this development. We will create two plots, of which the first one will show us the **participation in labor market** for the EU East, Non-EU East and West, for men and women. Data is available from 1990 to 2018 and only Kosovo is missing from the Non-EU East. The data is from the [World Bank](https://databank.worldbank.org/reports.aspx?source=2&series=SL.TLF.ACTI.ZS) and is one of their World Development Indicators. It is in percent of the total population, but considering only people with an age from 15 to 64. The other plot will show us the **hours worked per employed**, unfortunately there is no data for the Non-EU East available. Fuchs-Schündeln & Schündeln (2020) calculated the data therefore using the [EU Labour Force Survey](https://ec.europa.eu/eurostat/web/microdata/european-union-labour-force-survey) which was implemented from Eurostat. We have data from 2002 to 2016 from the EU East and from 1995 to 2016 for the West.

As a first step we need to load the relevant data set, modify it afterwards and create the two plots. The last step is to display these plots next to each other to compare the results.

**Task 5.1.1**

We will use the data `JEP_Data_MacroFacts.rds` in this task. Run the chunk to load the data assigned to the variable `datamacro`.

```{r "5_1_1"}
#< task
datamacro <- readRDS("JEP_Data_MacroFacts.rds")
#>
```

**Task 5.1.2**

The data set `datamacro` contains four variables which are of our interest. The variables `FemaleLFP1` and `MaleLFP1` store information regarding the labor force participation for female and male people. Furthermore we have the variables `hwe_f_15_64` and `hwe_m_15_64`, which store the information on hours work per employed for female and male people between 15 and 64.

#< quiz "Highest share of women participating in labor in 1990"

question: Which country has the highest percentage of women working in 1990?
sc:
    - Germany
    - Croatia
    - Estonia
    - Sweden*
    - Poland
    
success: The answer is correct! In 1990 the country with the highest share of working women was Sweden with 82%. The country with the lowest share on the other hand was Spain with 41%. 
failure: Try again.

#> 

<br>
We are going to create a new data set `datGEQ` in this task. It is based on `datamacro` and we connect several operations by creating a chain of commands with the pipe `%>%` operator from the `dplyr` package. The first step is to remove all observations from Kosovo, since we do not have data regarding the relevant indicators. As a next step we group the data by `Year` and `Country_group` to perform the next operations on the grouped level. We create four variables `lfpfemale` and `lfpmale` which represent the average labor force participation for female and male. They get computed as the means of `FemaleLFP1` and `MaleLFP1`. The other two variables are `hwefemale` and `hwemale` which represent the average hours worked per employed for female and male. Those get computed as the means of `hwe_f_15_64` and `hwe_m_15_64`. Given that we want to display the averages for female and male person, we create two more new variables which we name `Country_group_female` and `Country_group_male`. Those represent each country group, distinguished between female and male people. This makes it easier for us to create the plot, and especially the legend, in the next task. Therefore we use the `case_when` command.

#< info "case_when()"

The `case_when()` command is part of the `dplyr` package. It is basically a function consisting of multiple `ifelse()` statements. A brief example and explanation of the function:

```{r "5_1_2_1", optional = TRUE, eval = FALSE}
y = case_when(x == 1 ~ "It is one",
              x == 2 ~ "It is not one anymore",
              x == 3 ~ "It is three")
```
                 
In the above example the variable y gets created. It is a string variable which is based on the values of x, so if the variable x has the value 1, y gets coded as "It is one" and so on. If the variable x has a value which is not defined in `case_when()`, it returns NA.

See https://www.rdocumentation.org/packages/dplyr/versions/1.0.10/topics/case_when for more information about `case_when`.

#>

Fill in the missing pieces in the `summarize()` command to compute the averages and run the code.

```{r "5_1_2"}
#< fill_in
dataGEQ <- datamacro %>%
  subset(Country != "Kosovo") %>%
  group_by(Year, Country_group) %>%
  summarize(Year,
            Country_group,
            lfpfemale = ___,
            lfpmale = ___,
            hwefemale = ___,
            hwemale = ___) %>%
  mutate(Country_group_female = case_when(Country_group == "EU East" ~ "EU East, female",
                                       Country_group == "Non-EU East" ~ "Non-EU East, female",
                                       Country_group == "West" ~ "West, female"),
         Country_group_male = case_when(Country_group == "EU East" ~ "EU East, male",
                                       Country_group == "Non-EU East" ~ "Non-EU East, male",
                                       Country_group == "West" ~ "West, male")) %>%
  distinct()
#>
dataGEQ <- datamacro %>%
  subset(Country != "Kosovo") %>%
  group_by(Year, Country_group) %>%
  summarize(Year,
            Country_group,
            lfpfemale = mean(FemaleLFP1),
            lfpmale = mean(MaleLFP1),
            hwefemale = mean(hwe_f_15_64),
            hwemale = mean(hwe_m_15_64)) %>%
  mutate(Country_group_female = case_when(Country_group == "EU East" ~ "EU East, female",
                                       Country_group == "Non-EU East" ~ "Non-EU East, female",
                                       Country_group == "West" ~ "West, female"),
         Country_group_male = case_when(Country_group == "EU East" ~ "EU East, male",
                                       Country_group == "Non-EU East" ~ "Non-EU East, male",
                                       Country_group == "West" ~ "West, male")) %>%
  distinct()
```

**Task 5.1.3**

The next step is to create the two plots, using the `ggplot2` package. We save them in two variables `plot_lfp` and `plot_hwe`, to combine them in the next task together to one plot. We use the `geom_line()` command for female and male. As in the tasks before, we plot the years on the x-axis. The y-values are for the plot regarding labor force participation `lfpfemale` and `lfpmale`. Furthermore we use `Country_group_female` as a colour and linetype argument for the `geom_line()` regarding women and `Country_group_male` for the men. We plot the female people as a solid line and male people as a dashed line. This gets specified in the `scale_linetype_manual` command, 1 represents a solid line and 2 a dashed line. Eventually we adjust the legend, so it displays the correct linetype and colour for each country group and gender. The structure of the code for the plot regarding hours worked per employed `plot_hwe` is the same, but we use `hwefemale` and `hwemale` as y-values.

Have a look at the code and run the chunk to create the plots.

```{r "5_1_3"}
#< task
plot_lfp <- ggplot() +
   geom_line(data = dataGEQ, aes(x=Year, y=lfpfemale, colour = Country_group_female, linetype = Country_group_female)) +
   geom_point(data = dataGEQ, aes(x=Year, y=lfpfemale, colour = Country_group_female)) +
   geom_line(data = dataGEQ, aes(x=Year, y=lfpmale, colour = Country_group_male, linetype = Country_group_male)) +
   ylim(49,81) +
   ylab("Percent of female (male)\npopulation aged 15 - 64") +
   ggtitle("A: Labor force participation") +
   scale_color_manual("", values = c("red", "red", "orange", "orange", "blue", "blue")) +
   scale_linetype_manual("", values = c(1, 2, 1, 2, 1, 2)) +
   theme_minimal() +
   theme(legend.direction = "horizontal", legend.position = "bottom", legend.key = element_blank(), 
        legend.background = element_rect(fill = "white", colour = "gray30")) +
   guides(colour=guide_legend(keywidth = 3, keyheight = 1, override.aes = list(size = c(1, 0, 1, 0, 1, 0))))
 
plot_hwe <- ggplot() +
   geom_line(data = dataGEQ, aes(x=Year, y=hwefemale, colour = Country_group_female, linetype = Country_group_female)) +
   geom_point(data = dataGEQ, aes(x=Year, y=hwefemale, colour = Country_group_female)) +
   geom_line(data = dataGEQ, aes(x=Year, y=hwemale, colour = Country_group_male, linetype = Country_group_male)) +
   ylim(24,44) +
   ylab("Hours per week") +
   ggtitle("B: Hours worked per employed") +
   scale_color_manual("", values = c("red", "red", "orange", "orange", "blue", "blue")) +
   scale_linetype_manual("", values = c(1, 2, 1, 2, 1, 2)) +
   theme_minimal() +
   theme(legend.direction = "horizontal", legend.position = "bottom", legend.key = element_blank(), 
        legend.background = element_rect(fill = "white", colour = "gray30")) +
   guides(colour=guide_legend(keywidth = 3, keyheight = 1, override.aes = list(size = c(1, 0, 1, 0, 1, 0))))
#>
```

**Task 5.1.4**

As a last step we want to display the plots with taking use of the `patchwork` package. We connect the variable names of the two plots with an addition symbol, add a title and use the `plot_layout()` command. This one is important to get only one legend for the plot.

Complete the chunk by adding the variable names of the two plots and run the chunk. We want to have the plot regarding labor force participation on the left side so the variable name of it has to be the first.

```{r "5_1_4", fig.width=10, fig.height=7}
#< fill_in
___ + ___ + plot_annotation(
  title = "Labor Force Participation and Hours Worked per Employed by Gender",
  theme = theme(plot.title = element_text(size = 18))
) +
  plot_layout(guides = "collect") & 
  theme(legend.position = "bottom")
#>
plot_lfp + plot_hwe + plot_annotation(
  title = "Labor Force Participation and Hours Worked per Employed by Gender",
  theme = theme(plot.title = element_text(size = 18))
) +
  plot_layout(guides = "collect") & 
  theme(legend.position = "bottom")
```

In 1990, the participation of women in labor was 8 percentage points higher in the EU East than in the West, with 64% in the EU East and 56% in the West. However, the participation was rising over the years in the West and in 2018 the rate of female people was at 69% in the West and 68% in the EU East. The Non-EU East was lowest over all years, with 51% in 1990 and 53% of women participating in labor in 2018. The participation of men in labor however, was highest in the West all over the years. In 1990 80% of male people participated in labor, whereas it was only 77% in the EU East and 72% in the Non-EU East. These numbers did not change that much over the years, in 2002 there was a drop in the participation rate, especially in the EU East to 72%, which was probably caused by the transition from a communist to a capitalist regime (Fuchs-Schündeln & Schündeln, 2020). Interesting is the distribution of female and male participation rates across the West. Whereas in northern countries like Sweden, Denmark and the Netherlands the participation rate of women always was on the same level (around 80%) as the participation rate of men. In southern countries like Spain, Italy or Greece however, there have been big differences in 1990 and are still there in 2018. In 1990 the difference was around 40 percentage points in these countries and in 2018 it is still around 10 to 15 percentage points. This means we can observe strong cultural differences, regarding this indicator. Analyzing the participation in labor market alone does not provide us enough information to draw conclusions, since it does not consider part-time work.   
Figure B on the right side shows the average hours worked per employed. We see that workers in the EU East in general work on average more than workers in the West. Female people in the EU East work on average almost the same hours per week as male people from the West, whereas female people in the West work on average 7 hours per week less. Male people in the EU East work on average 39 hours per week. We can observe a trend towards less hours per week across the EU East and the West, for female and male people.  
Fuchs-Schündeln & Schündeln (2020) also analyzed data from Eurostat regarding the gender pay gap. They came to the result that in 2017 the average hourly wage in industry, construction and service (without public administration and defense) 14% higher for male people than the hourly wage of female people was. This is almost identical in the EU East and the West.

We have seen a trend towards more gender equality in labor market in the West, but also in the EU East in this task. In the next task we will have a look on preferences regarding gender equality and how or if those differ across different cohorts.

#< award "The Gender Equality Award"
Well done! You learned something about gender equality in the labor market and oh wonder, it is not as equal as one may think.
#>

## Exercise 5.2 -- Preferences for Gender Equality in the Labor Market

As explained in the introduction to this exercise, participation of women in the labor market was actively promoted in the communist states. We want to analyze in this task if this lead to more favorable attitudes towards working women and how they differ compared to attitudes towards working women in the West. Since it was actively promoted in the communist states and as we have seen in the plot in the last task, in 1990 the share of working women was higher in the EU East than in the West, we could expect a higher support for women participating in labor market in the EU East than in the West. In theory people living a longer time under communism should have a higher support for working women, but since the trend in general is towards more equality in labor market, it is difficult to make a prediction. It should be noted that cultural and religious effects regarding this topic could play a big role too, since it is more common in Eastern countries that women stay at home and men go to work, than in Western countries (Richmond, 1995).

We are going to analyze those preferences in this exercise by evaluating data from the International Social Survey Programme (ISSP) survey on the [Family and Changing Gender Roles IV](https://search.gesis.org/research_data/ZA5900?doi=10.4232/1.12661) module from 2012. We will plot this data and conduct a regression analysis, which is similar to a differene-in-difference estimation in the second part of the exercise.

**Task 5.2.1** 

Run the chunk to load the data `JEP_Preferences_Data.rds` which we assign to `datapref`.

```{r "5_2_1"}
#< task
datapref <- readRDS("JEP_Preferences_Data.rds")
#>
```

Since the data is from the ISSP we do not have data for the Non-EU East unfortunately. Furthermore data for Estonia and Romania from the EU East is missing, as well as data for Greece, Italy, Luxembourg and Spain. You find a description of the main variables of this task in the info box below. 

#< info "women_work_7_binary & women_work_index7"

The variables `women_work_7_binary` and `women_work_index7` describe attitudes towards gender equality in labor market. The authors calculated these based on the ISSP Family and Changing Gender Roles IV module from 2012. As the name of the variable says, `women_work_7_binary` is a indicator variable with the values 1 and 0. The statement in the survey is "A man's job is to earn money; a woman's job is to look after the home and family.". If the respondent chose the answer "strongly disagree" or "disagree", Fuchs-Schündeln & Schündeln (2020) coded the answer 1, which is in favor of gender equality. Otherwise the variable has the value 0.  
The variable `women_work_index7` is built as an index with a range from 1 to 5. Therefore the authors evaluated seven questions from the Family and Changing Gender Roles IV module from 2012. Each of the question has the same answer possibilities, namely "Strongly agree", "Agree", "Neither agree nor disagree", "Disagree" or "Strongly disagree". If the respondent chose "Can't choose" the answer is coded as NA. The answer "Strongly disagree" is for all statements the answer with the highest support for gender equality and equals the value 5. The authors evaluated every question and calculated the average afterwards. One of the relevant statements is statement 7, which was also used to create `women_work_7_binary`. Another relevant statement was "A working mother can establish just as warm and secure a relationship with her children as a mother who does not work." or "A pre-school child is likely to suffer if his or her mother works.". You can find all relevant information if you download the questionnaire you can find with the link below.

Source: Fuchs-Schündeln & Schündeln (2020) and [Family and Changing Gender Roles IV](https://search.gesis.org/research_data/ZA5900?doi=10.4232/1.12661)

#>

**Task 5.2.2**

We create a new data set `data_gendereq` in this task, which contains the average support for gender equality in labor market. Given that we do not have information about the Non-EU East, we use the variable `east_west` to distinguish between EU East and West. Furthermore we have the variable `cohort_numeric` which indicates the cohort the respondent is in. We filter the year 2012, remove Germany and group by `east_west` and `cohort_numeric`. Next we create the variable `gendereq` which gets computed as the weighted mean of `women_work_7_binary`, weighted with the survey weights `weight_ISSP` and multiplied with 100 to get the average support in percent. The last step is to use `distinct()` to get unique values only and use `na.omit()` to remove rows containing NAs.

Fill in the missing variable names for the `weighted_mean()` command and run the chunk afterwards to prepare the data.

```{r "5_2_2"}
#< fill_in
data_gendereq <- datapref %>%
  filter(year == 2012) %>%
  subset(., countryname != "Germany") %>%
  group_by(east_west, cohort_numeric) %>%
  summarize(east_west,
            cohort_numeric,
            gendereq = weighted_mean(___)*100) %>%
  distinct() %>%
  na.omit()
#>
data_gendereq <- datapref %>%
  filter(year == 2012) %>%
  subset(., countryname != "Germany") %>%
  group_by(east_west, cohort_numeric) %>%
  summarize(east_west,
            cohort_numeric,
            gendereq = weighted_mean(women_work_7_binary,weight_ISSP)*100) %>%
  distinct() %>%
  na.omit()
```

**Task 5.2.3**

As a next step we want to plot the prepared data using the `ggplot2` package. We plot the cohorts on the x-axis and the average support for gender equality on the y-axis. Furthermore we create a legend for the name of the country groups and the assigned color.

Run the chunk and have a look on the plot.

```{r "5_2_3", fig.width=7, fig.height=7}
#< task
ggplot() +
  geom_line(data=data_gendereq, aes(x=cohort_numeric, y=gendereq, colour = east_west)) +
  geom_point(data=data_gendereq, aes(x=cohort_numeric, y=gendereq, colour = east_west)) +
  scale_color_manual(name = "", 
                    labels = c("EU East", "West"),
                    values = c("red", "blue")) +
  ylim(19,100) +
  ggtitle("Support for gender equality") +
  ylab("") +
  scale_x_continuous(breaks = c(1,2,3,4),
                     labels = c("Born \nbefore 1945","Born \n1945 - 1959","Born \n1960 - 1974","Born \nafter 1974")) + 
  xlab("") +
  theme_minimal() +
  theme(legend.direction = "horizontal", legend.position = "bottom", legend.key = element_blank(), 
        legend.background = element_rect(fill = "white", colour = "gray30")) +
  guides(colour=guide_legend(keywidth = 3, keyheight = 1))
#>
```

It stands out directly that the average support in the West is higher across all cohorts than in the EU East. There is a positive gradient in the West and EU East across the cohorts, though it is not as much in the EU East as in the West. The oldest cohort in the EU East has an average support of 26%, which is 18 percentage points less than in the West with 44%. In the youngest cohort the difference is even larger. The average support in the EU East is 38%, whereas in the West it is 77%, which is a difference of 39 percentage points. In general the average support from the West is 65% and in the EU East 33%. This is not in line with the hypotheses that communism affects preferences in the direction of communism. Since the lowest support is in the oldest cohort in the EU East and the difference between the youngest and oldest cohort in the EU East is only 12 percentage points, compared to a difference of 33 percentage points in the West, it could be an indicator that communism affected the preferences. However, these findings are in line with the slight decrease in female labor participation until 2003 in the EU East and the rapid increase in the West. 

As said earlier, the difference could be due to cultural or also religious influence. Furthermore, Fuchs-Schündeln & Schündeln (2020) point out that those differences could have existed already before communism.  
To minimize these potential differences, we are going to have a look on preferences within Germany. Since there is not that much data available for Germany, we take the years 1994, 2002 and 2012 into consideration.

#< quiz "Comparison between East Germany and the EU East"

question: Do you think the average support for gender equality is higher in East Germany than in the EU East?
sc:
    - Yes*
    - No
    
success: The answer is correct! The average support for gender equality is higher in East Germany than in the EU East. Continue with the next task to get more detailed insights.
failure: Try again.

#> 

<br>
**Task 5.2.4**

We prepare a new data set which we name `data_gendereq_ger`. We filter the years 1994, 2002 and 2012 and filter for observations from Germany only afterwards. Furthermore we group by `east_west_ger`, which separates the observations into East- and West Germany. We create a new variable `gendereq_ger` which computes the weighted mean from the same dummy variable `women_work_7_binary` we have used above.

Run the chunk to prepare the data.

```{r "5_2_4"}
#< task
data_gendereq_ger <- datapref %>%
  filter(year == 1994 | year == 2002 | year == 2012) %>%
  filter(countryname == "Germany") %>%
  group_by(east_west_ger, cohort_numeric) %>%
  summarize(east_west_ger,
            cohort_numeric,
            gendereq_ger = weighted_mean(women_work_7_binary,weight_ISSP)*100) %>%
  distinct() %>%
  na.omit()
#>
```

**Task 5.2.5**

After preparing the data regarding Germany only, we want to plot the preferences. The code is the same as for the last plot, only the names of the variables have changed and the title is different. Run the chunk and have a look on the plot.

```{r "5_2_5", fig.width=7, fig.height=7}
#< task
ggplot() +
  geom_line(data=data_gendereq_ger, aes(x=cohort_numeric, y=gendereq_ger, colour = east_west_ger)) +
  geom_point(data=data_gendereq_ger, aes(x=cohort_numeric, y=gendereq_ger, colour = east_west_ger)) +
  scale_color_manual(name = "", 
                    labels = c("East Germany", "West Germany"),
                    values = c("red", "blue")) +
  ylim(19,100) +
  ggtitle("Support for gender equality: Comparison within Germany") +
  ylab("") +
  scale_x_continuous(breaks = c(1,2,3,4),
                     labels = c("Born \nbefore 1945","Born \n1945 - 1959","Born \n1960 - 1974","Born \nafter 1974")) + 
  xlab("") +
  theme_minimal() +
  theme(legend.direction = "horizontal", legend.position = "bottom", legend.key = element_blank(), 
        legend.background = element_rect(fill = "white", colour = "gray30")) +
  guides(colour=guide_legend(keywidth = 3, keyheight = 1))
#>
```

We see a different picture than in the last plot. Within Germany the average support for gender equality in labor market is in every cohort higher in East Germany than in West Germany. The largest difference is in the oldest cohort, with 67% in East Germany, which is 33 percentage points higher than in West Germany. The cohort gradient in West Germany is similar than in the West in the last plot, but with a lower average support of only 61%, which is 16 percentage points less. The average in East Germany is 79%, which is 41 percentage points higher than in the EU East.  
This analysis of Germany has shown us that cultural and religious factors may play a big role regarding attitudes towards gender equality.

We will focus on the cohort gradient for the EU East and West more in the following and conduct a linear regression regarding the differences across cohorts.

#< award "Preferences for Gender Equality in the Labor Market"
Congratulations! You got introduced into preferences for gender equality in the labor market in Europe, as well as in Germany.
#>

### Regression Analysis

We are going to compute a linear model in this part of the exercise. The model we will use is similar to a difference-in-difference estimation and since the structure is very similar to the model in **Exercise 2.4** I will not go as much in depth as in that exercise.

The goal of the regression is to see whether the difference in attitudes towards gender equality between young and old is smaller in the East than in the West. This means that we want to analyze if living longer under communism lead to differences in attitudes. Specifically we are going to analyze if the difference in attitudes towards gender equality, based on the year of birth, between East and West is negative. The dependent variable `women_work_index7` of the regression describes attitudes towards gender equality, as an index built by Fuchs-Schündeln & Schündeln (2020) regarding seven questions from the Family and Changing Gender Roles IV module. Given that our dependent variable is an index based on survey results, we need to standardize it again using the z-transformation:
$$
z = \frac{y-\mu}{\sigma}
$$
$y$ is the score of our variable, $\mu$ is the mean of the population and $\sigma$ is the standard deviation of the population. Standardizing the variables has the result, that we can not interpret the coefficients in the units of the variable anymore. We have to interpret it in standard deviation units, which makes the original scale irrelevant (Wooldridge, 2013).  
The linear model we are going to build is similar to a difference-in-difference estimation. We regress the standardized attitudes towards gender equality on an interaction term of the dummy variable `East2` and `birthyear10`. Moreover we add the variables `birthyear10`, which represents the year of birth divided by 10, `male` and `unemployed_All` as control variables. Furthermore we control for country-year fixed effects. The focus in the regression is on the interaction term, which is defined as `East2_birthyr10`. If it is negative, the differences in attitudes towards gender equality between young and old are smaller in the East than in the West.

**Task 5.2.6**

We need to prepare a new data set first of all, which we name `datareg4`. It is based on `datapref` and we create a pipe `%>%` chain to remove observations regarding Germany and remove all rows containing NAs for the relevant variables afterwards. 

Run the chunk to prepare the data.

```{r "5_2_6"}
#< task
datareg4 <- datapref %>%
  filter(countryname != "Germany") %>%
  drop_na(women_work_index7, birthyear10, East2_birthyr10, male, unemployed_All, countryyear, countryname, weight_ISSP)
#>
```

**Task 5.2.7**

The next step is to standardize the variable `women_work_index7` like the following equation shows:
$$
women{\_}work{\_}index7{\_}sd = \frac{women{\_}work{\_}index7-\mu_{women{\_}work{\_}index7}}{\sigma_{women{\_}work{\_}index7}}
$$
We create a new variable which we name `women_work_index7_sd` in the data set `datareg4` with the `mutate()` command. Given that the variable is based on survey results, it is important to take the weighted mean and standard deviation with the survey weights `weight_ISSP`.

Complete the chunk with the code for the standardization. If you are not sure have a look back to **Task 4.2.5** from exercise 4.2.

```{r "5_2_7"}
#< fill_in
datareg4 <- datareg4 %>%
  mutate(women_work_index7_sd = ___)
#>
datareg4 <- datareg4 %>%
  mutate(women_work_index7_sd = (women_work_index7 - weighted_mean(women_work_index7,weight_ISSP)) / weighted_sd(women_work_index7,weight_ISSP))
```

**Task 5.2.8**

We are going to compute a weighted least squared (WLS) regression with the `felm()` command in this task, since we already know that we need to consider heteroskedasticity. The standardized variable `women_work_index7_sd` is the dependent variable and we use `East2_birthyr10`, `birthyear10`, `male` and `unemployed_All` as independent variables. Furthermore we control for `countryyear` fixed effects and use `weight_ISSP` as weights. 

Run the chunk to compute the regression.

```{r "5_2_8"}
#< task
reg4 <- felm(women_work_index7_sd ~ East2_birthyr10 + birthyear10 + male + unemployed_All | countryyear | 0 | countryname, data = datareg4, weight = datareg4$weight_ISSP)
#>
```

**Task 5.2.9**

After computing the regression, we want to visualize the results with the `stargazer` package. Run the chunk and have a look at the results.

```{r "5_2_9", results='asis'}
#< task
stargazer(reg4,
          type = "html",
          title = "Regression Results",
          dep.var.labels = "Support for Gender Equality <br>(index)",
          column.labels = c("WLS"),
          covariate.labels = c("EastxBirthYear<sup>-10<sup>", "BirthYear<sup>-10<sup>", "Male", "Unemployed"),
          keep.stat = c("rsq", "n"),
          add.lines=list(c('CountryxYear fixed effects', 'Yes')))
#>
```

<br>
The coefficient of the interaction term is negative and thus it is in line with the hypothesis that communism affects preferences. Differences in attitudes towards gender equality between young and old are smaller in the East than in the West. Furthermore the coefficient is highly significant on the 1%-level, indicated by the three ***. We can see that living longer under communism affects preferences, but not in the direction as we would expect. Older people, who lived longer under communism, in fact tend to have less support for gender equality than younger people. The results in exercise 5.1 indicate almost equality in the labor market. The work of Ferge (1997) is in line with those findings. In work, studies, culture and politics, men and women have become almost equal. In the private life however, men and women have not been equal, the traditional role of the man and of the woman remained in the families (Ferge, 1997). This could be an explanation for the lower preferences for gender equality of people living longer under communism.

Continue with the next task to get a summary of all of the findings in this problem set.

#< award "Linear Regression Master No. 4"
Congratulations, you are almost there! You analyzed preferences for gender equality in the labor market.
#>

## Exercise 6 -- Summary of Regression Analysis

As a last part of the problem set, we want to display the findings of the regressions in one `stargazer` table. Click on the info box below to display the table, it contains the source code for the stargazer table with the results of all five regressions. The R code which creates the stargazer table is available as the file `rr.R` in the GitHub repository.

#< info "Regression Results"

<style>
#mytab td {
padding-left: 3em;
}
</style>
<div id = 'mytab'>

<table style="text-align:center"><caption><strong>Regression Results</strong></caption>
<tr><td colspan="6" style="border-bottom: 1px solid black"></td></tr><tr><td style="text-align:left"></td><td colspan="5"><em>Dependent variable:</em></td></tr>
<tr><td></td><td colspan="5" style="border-bottom: 1px solid black"></td></tr>
<tr><td style="text-align:left"></td><td>Support for <br>Market Economy (%)</td><td>Support for <br>Democracy (%)</td><td>Support for <br>Redistribution <br>(social ineq. module)</td><td>Support for <br>Redistribution <br>(role of gov. module)</td><td>Support for <br>Gender Equality <br>(index)</td></tr>
<tr><td style="text-align:left"></td><td colspan="2">LITS data</td><td colspan="3">ISSP data</td></tr>
<tr><td style="text-align:left"></td><td>(1)</td><td>(2)</td><td>(3)</td><td>(4)</td><td>(5)</td></tr>
<tr><td colspan="6" style="border-bottom: 1px solid black"></td></tr><tr><td style="text-align:left">EastxBirthYear<sup>-10<sup></td><td>0.027<sup>***</sup></td><td>0.028<sup>***</sup></td><td>-0.054<sup>***</sup></td><td>-0.005</td><td>-0.073<sup>***</sup></td></tr>
<tr><td style="text-align:left"></td><td>(0.005)</td><td>(0.006)</td><td>(0.010)</td><td>(0.013)</td><td>(0.016)</td></tr>
<tr><td style="text-align:left"></td><td></td><td></td><td></td><td></td><td></td></tr>
<tr><td style="text-align:left">BirthYear<sup>-10<sup></td><td>0.006</td><td>0.001</td><td>-0.023<sup>***</sup></td><td>-0.059<sup>***</sup></td><td>0.172<sup>***</sup></td></tr>
<tr><td style="text-align:left"></td><td>(0.004)</td><td>(0.005)</td><td>(0.007)</td><td>(0.010)</td><td>(0.009)</td></tr>
<tr><td style="text-align:left"></td><td></td><td></td><td></td><td></td><td></td></tr>
<tr><td style="text-align:left">Male</td><td>0.039<sup>***</sup></td><td>0.025<sup>***</sup></td><td>-0.136<sup>***</sup></td><td>-0.137<sup>***</sup></td><td>-0.173<sup>***</sup></td></tr>
<tr><td style="text-align:left"></td><td>(0.006)</td><td>(0.004)</td><td>(0.023)</td><td>(0.024)</td><td>(0.019)</td></tr>
<tr><td style="text-align:left"></td><td></td><td></td><td></td><td></td><td></td></tr>
<tr><td style="text-align:left">Unemployed</td><td>-0.061<sup>***</sup></td><td>-0.050<sup>***</sup></td><td>0.171<sup>***</sup></td><td>0.233<sup>***</sup></td><td>-0.114<sup>***</sup></td></tr>
<tr><td style="text-align:left"></td><td>(0.012)</td><td>(0.011)</td><td>(0.030)</td><td>(0.026)</td><td>(0.023)</td></tr>
<tr><td style="text-align:left"></td><td></td><td></td><td></td><td></td><td></td></tr>
<tr><td colspan="6" style="border-bottom: 1px solid black"></td></tr><tr><td style="text-align:left">CountryxYear fixed effects</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td></tr>
<tr><td style="text-align:left">Mean dep. var.</td><td>0.4</td><td>0.56</td><td>0</td><td>0</td><td>0</td></tr>
<tr><td style="text-align:left">Sd dep. var.</td><td>0.49</td><td>0.5</td><td>1</td><td>1</td><td>1</td></tr>
<tr><td style="text-align:left">Observations</td><td>60,743</td><td>62,771</td><td>48,517</td><td>50,372</td><td>56,785</td></tr>
<tr><td style="text-align:left">R<sup>2</sup></td><td>0.051</td><td>0.062</td><td>0.088</td><td>0.088</td><td>0.210</td></tr>
<tr><td colspan="6" style="border-bottom: 1px solid black"></td></tr><tr><td style="text-align:left"><em>Note:</em></td><td colspan="5" style="text-align:right"><sup>*</sup>p<0.1; <sup>**</sup>p<0.05; <sup>***</sup>p<0.01</td></tr>
</table>

</div>
#>

The main goal of the linear models was to show if living under communism affected preferences. We can say that this hypothesis is true, since every coefficient of the interaction term does not equal zero.  
The regressions in column 1 and 2 are based on LITS data and the dependent variables which represent support for market economy and support for democracy are dummy variables. In column 3, 4 and 5 the regressions have indices as dependent variables, which are based on ISSP data and standardized to have mean 0 and standard deviation 1. There are two additional lines in the regression table showing the mean and standard deviation of the dependent variables. The regressions in column 3 and 4 represent support for redistribution, based on data from the social inequality module and role of government module and the regression in column 5 is about support for gender equality. The indices in regression 3, 4 and 5 are coded in a way that a higher score means a higher support. The inclusion of controlling for country-year fixed effects had the advantage that unobserved country-year shocks, which affected the economic or political situation in a country and thus affected preferences, have been ruled out (Fuchs-Schündeln & Schündeln, 2020).  
In regression 1 and 2, we wanted to see if the differences in attitudes towards a market economy and towards democracy, between younger and older people, are larger in the East than in the West. Since the coefficients of the interaction terms are positive, the hypothesis is true. Living a longer time under communism affected the preferences and people who experienced a long time of communism tend to have preferences which are in line with the communist doctrine, than people who lived not that long under a communist regime.  
In regression 3, 4 and 5 we wanted to analyze if the differences in attitudes towards redistribution and gender equality, between younger and older people, are smaller in the East than in the West. The coefficients of the interaction term in regression 3, 4 and 5 are negative and, except for the coefficient in regression 4, highly significant. Thus, the hypothesis is again true and we can say that communism affects preferences.  
To sum up, the results of the regressions are in line with our assumption that living under communism affects preferences.


## Exercise 7 -- Conclusion

The aim of this interactive analysis was to find out the long-term effects of communism in Eastern Europe. The focus of our analysis was in the years after the fall of the iron curtain, until the most recent years available in the data. We considered four areas in which communism and capitalism fundamentally differ, namely government intervention into markets, political freedom, income distribution and gender inequality. Each exercise considered one area, whereas each exercise was split up in a macro analysis part regarding indicators of the area and the analysis of preferences. The analysis of preferences started with a graphical analysis and ended with a regression analysis, of which the results have been summarized in the last exercise. The first exercise was about getting a feeling of the data and creating a first plot regarding the development of the GDP per Capita in our three groups, the EU East, Non-EU East and West. This indicator, as well as most of the other indicators we analyzed have shown us that the East is converging towards levels of the West.

The next exercise was regarding government intervention into markets and was split up in four parts. This had the reason that the complex linear models used in the original paper have been broken down into a simple estimation, similar to a difference-in-difference estimation. Further on more factors have been added to the model and eventually the original estimation was conducted. We could observe a lower support for a market economy for people living a longer time under communism, compared to people experiencing less time under a communist regime. 

Since the structure of the linear models were the same in the next exercises, we did not break them down that much in detail. Most of our findings have been in line with our assumptions. After the fall of the iron curtain, the indicators have shown levels that could be explained through communist theory and converged towards levels of the West in the following years. The same is for preferences, older people who experienced a long time of communism tend to have preferences which are in line with the communist doctrine and younger people have more preferences that are in line with the capitalist doctrine. Only in the exercise regarding gender equality, preferences have been surprisingly low and the West had much higher support for gender equality across all cohorts. Since this could possible be through cultural and religious reasons, we analyzed those preferences in Germany and came to a different result than in Eastern Europe. The linear regressions in all exercises confirmed our assumptions that communism affects preferences.

According to most of our findings and indicators, life during communism was much more equal than it is today. Though, the economic situation as of today seems better in Central and Eastern Europe than before. Is this a result of capitalism? Surely it is, but increasing inequality especially in the distribution of income is a result of capitalism too. In my opinion we may have to think about adopting an economic system which is not based on infinite growth and act as a collective in society.

Finally, you can display the awards you earned throughout the problem set by running the chunk below. Press `edit` and `check` afterwards. Thank you for taking part in this economic journey, I hope you gained new insights regarding the effects of communism in Eastern Europe. If you are interest in more problem sets, you can get an overview over the available problem sets [here](https://github.com/skranz/RTutor).

```{r "7",optional=TRUE}
#< task
awards()
#>
```

#< award "The Long-Term Effects of Communism Award"
Congratulations! You successfully solved the problem set.    
I hope you had a good time completing this interactive analysis and learned something new about R, econometrics, communism and the effects that communism can have.
#>

## Exercise 8 -- References

### Bibliography

- Alesina, A., & Fuchs-Schündeln, N. (2007). Good-bye Lenin (or Not?): The Effect of Communism on People's Preferences. *American Economic Review*, 97 (4), 1507-1528.

- Anderson, G. M., & Boettke, P. J. (1997). Soviet venality: A rent-seeking model of the communist state. *Public Choice*, 93(1), 37-53.

- Bahro, R. (1978). *The alternative in eastern Europe*. Verso Books.

- Breusch, T. S., & Pagan, A. R. (1979). A Simple Test for Heteroscedasticity and Random Coefficient Variation. *Econometrica*, 47(5), 1287–1294.

- Campa, P., & Serafinelli, M. (2019). Politico-Economic Regimes and Attitudes: Female Workers under State Socialism. *The Review of Economics and Statistics*, 101(2), 233-248.

- Cassel, G. (1918). Abnormal deviations in international exchanges. *The Economic Journal*, 28(112), 413-415.

- Engels, F. (with Bedacht M.). (1925). *Principles of communism: (Engels' original draft of the Communist Manifesto)*. Chicago: Published for the Workers Party of America by the Daily Worker Pub. Co. (Original work published 1847)

- Engels, F. (1884). *Origins of the Family, Private Property and the State*. Retrieved from https://www.marxists.org/archive/marx/works/1884/origin-family/ (last accessed on: 11.01.2023)

- Ferge, Z. (1997). Women and Social Transformation in Central-Eastern Europe. *Czech Sociological Review*, 5(2), 159-178. 

- Fioramonti, L., Coscieme, L., & Mortensen, L. F. (2019). From gross domestic product to wellbeing: How alternative indicators can help connect the new economy with the Sustainable Development Goals. *The Anthropocene Review*, 6(3), 207-222.

- Fuchs-Schündeln N., & Schündeln M. (2020). The Long-Term Effects of Communism in Eastern Europe. *Journal of Economic Perspectives*, 34(2), 172-191.

- Gibson, J. L. (1993). Perceived Political Freedom in the Soviet Union. *The Journal of Politics*, 55(4), 936–974. 

- Gurr, T. R., & Marshall M. G. (2018). *Political Regime Characteristics and Transitions, 1800-2018*. Dataset Users’ Manual. Center for Systemic Peace

- Grant, N. (1969). *Society, Schools and Progress in Eastern Europe*. Oxford, Pergamon Press.

- Kennedy, P. (2008): *A Guide to Econometrics*. 6th Edition. Malden, MA [i.a.]: Blackwell Publishing.

- Kleiber, C., & Zeileis, A. (2008). *Applied Econometrics with R*. New York, NY: Springer.

- Laudenbach, C., Malmendier, U., & Niessen-Ruenzi, A. (2019). Emotional tagging and belief formation: The long-lasting effects of experiencing communism. *AEA papers and proceedings*, 109, 567-571.

- Marx, K., & Engels, F. (1848). *Manifest der Kommunistischen Partei*. London. Retrieved from: Deutsches Textarchiv https://www.deutschestextarchiv.de/marx_manifestws_1848 (last accessed on: 11.01.2023)

- Marx, K. (1955). *The poverty of philosophy*. Progress Publishers. (Original work published 1847). Retrieved from https://www.marxists.org/archive/marx/works/1847/poverty-philosophy/ (last accessed on: 11.01.2023)

- Novokmet, F. (2021). Long-Run Inequality in Communist Countries: Before, During and After. In: E. Douarin & O. Havrylyshyn (Eds.), *The Palgrave Handbook of Comparative Economics* (1st ed., pp. 213-254). Springer Books.

- Rakowska-Harmstone, T., & Gyorgy, A. (1979). *Communism in Eastern Europe*. Bloomington: Indiana University Press.

- Richmond, Y. (1995). *From Da to Yes: Understanding the East-Europeans*. Yarmouth: Intercultural Press. 

- Sandle, M. (2007). Soviet and Eastern bloc Marxism. In: D. Glaser & D.M. Walker (Eds.), *Twentieth-Century Marxism: A Global Introduction* (1st ed., pp. 71-90). Routledge.

- Stock J. H., & Watson M. W. (2020). *Introduction to econometrics* (4th ed.). Pearson Education Limited.

- Šiklová, J. (1993). Are women in Central and Eastern Europe conservative?. In: N. Funk & M. Mueller (Eds.), *Gender Politics and Post-Communism: Reflections from Eastern Europe and the Former Soviet Union* (1st ed., pp- 74-83). Routledge.

- Sweet, A. S. (2003). Constitutional courts and parliamentary democracy. In: A.S. Sweet & M. Thatcher, *The politics of delegation* (1st ed., pp. 77-100). Routledge.

- Verbeek, M. (2004). *A Guide to Modern Econometrics* (2nd ed.) John Wiley & Sons Inc.

- Welsh, H. A. (1996). Dealing with the communist past: Central and East European experiences after 1990. *Europe-Asia Studies*, 48(3), 413-428.

- Wooldridge, J. M. (2013). *Introductory Econometrics: A Modern Approach* (5th ed.). Mason: Thomson/South-Western.

### R Packages

- Gaure, S. (2022) *lfe:* *Linear Group Fixed Effects*. R package version 2.8-7.1. https://cran.r-project.org/web/packages/lfe/index.html

- Hlavac, M. (2022). *stargazer:* *Well-Formatted Regression and Summary Statistics Tables*. R package version 5.2.3. https://cran.r-project.org/web/packages/stargazer/index.html

- Hothorn, T. & Zeileis, A. (2022). *lmtest:* *Testing Linear Regression Models*. R package version 0.9-40. https://cran.r-project.org/web/packages/lmtest/index.html

- Kranz, S. (2020). *RTutor:* *Interactive R problem sets with automatic testing of solutions and automatic hints*. R package version 2020.11.25. https://github.com/skranz/RTutor

- Pedersen, T. L. (2022). *patchwork:* *The Composer of Plots*. R package version 1.1.1. https://cran.r-project.org/web/packages/patchwork/index.html

- Robitzsch, A., Kiefer, T. & Wu, M. (2022). *TAM:* *Test Analysis Modules*. R package version 3.7-16. https://cran.r-project.org/web/packages/TAM/index.html

- Wickham, H., Chang, W., Henry, L., Pedersen, T. L., Takahashi, K., Wilke, C., Woo, K., Yutani, H., & Dunnington, D. (2022). *ggplot2:* *Create Elegant Data Visualisations Using the Grammar of Graphics*. R package version 3.4.0. https://cran.r-project.org/web/packages/ggplot2/index.html

- Wickham, H., François, R., Henry, L. & Müller, K. (2022). *dplyr:* *A Grammar of Data Manipulation*. R package version 1.0.10. https://cran.r-project.org/web/packages/dplyr/index.html

- Wickham, H. & Girlich, M. (2022). *tidyr:* *Tidy Messy Data*. R package version 1.1.3. https://cran.r-project.org/web/packages/tidyr/index.html

- Zhu, H. (2021). *kableExtra:* *Construct Complex Table with 'kable' and Pipe Syntax*. R package version 1.3.4. https://cran.r-project.org/web/packages/kableExtra/

### Data

- Fuchs-Schündeln N., & Schündeln M. (2020). The Long-Term Effects of Communism in Eastern Europe. *Journal of Economic Perspectives*, 34(2), 172-191. https://www.openicpsr.org/openicpsr/project/117970/version/V1/view (last accessed on: 24.01.2023)

- *All links in the text were accessible as of January 24, 2023*
